{"version":3,"sources":["../../../js/helpers/domManipulation.js"],"names":["forEach","require","addClass","element","className","classes","split","indexOf","push","join","removeClass","foundClass","splice","removeClasses","bind","hasClass","module","exports"],"mappings":"AAAA;;AACA,IAAIA,UAAUC,QAAQ,gBAAR,CAAd;AACA;;;;;;;AAOA,IAAIC,WAAW,SAAXA,QAAW,CAAUC,OAAV,EAAmBC,SAAnB,EAA8B;AACzC,QAAIC,UAAUF,QAAQC,SAAR,CAAkBE,KAAlB,CAAwB,GAAxB,CAAd;AACA,QAAI,CAAC,CAAD,KAAOD,QAAQE,OAAR,CAAgBH,SAAhB,CAAX,EAAuC;AACnCC,gBAAQG,IAAR,CAAaJ,SAAb;AACH;AACDD,YAAQC,SAAR,GAAoBC,QAAQI,IAAR,CAAa,GAAb,CAApB;AACH,CAND;AAOA;;;;;;;AAOA,IAAIC,cAAc,SAAdA,WAAc,CAAUP,OAAV,EAAmBC,SAAnB,EAA8B;AAC5C,QAAIC,UAAUF,QAAQC,SAAR,CAAkBE,KAAlB,CAAwB,GAAxB,CAAd;AACA,QAAIK,aAAaN,QAAQE,OAAR,CAAgBH,SAAhB,CAAjB;AACA,QAAI,CAAC,CAAD,KAAOO,UAAX,EAAuB;AACnBN,gBAAQO,MAAR,CAAeD,UAAf,EAA2B,CAA3B;AACH;AACDR,YAAQC,SAAR,GAAoBC,QAAQI,IAAR,CAAa,GAAb,CAApB;AACH,CAPD;AAQA;;;;;;;AAOA,IAAII,gBAAgB,SAAhBA,aAAgB,CAAUV,OAAV,EAAmBE,OAAnB,EAA4B;AAC5CL,YAAQK,OAAR,EAAiB,KAAKK,WAAL,CAAiBI,IAAjB,CAAsB,IAAtB,EAA4BX,OAA5B,CAAjB;AACH,CAFD;AAGA;;;;;;;AAOA,IAAIY,WAAW,SAAXA,QAAW,CAAUZ,OAAV,EAAmBC,SAAnB,EAA8B;AACzC,WAAOD,QAAQC,SAAR,CAAkBG,OAAlB,CAA0BH,SAA1B,IAAuC,CAAC,CAA/C;AACH,CAFD;AAGAY,OAAOC,OAAP,GAAiB;AACbF,cAAUA,QADG;AAEbb,cAAUA,QAFG;AAGbQ,iBAAaA,WAHA;AAIbG,mBAAeA;AAJF,CAAjB;AAMA","file":"domManipulation.js","sourcesContent":["\"use strict\";\nvar forEach = require(\"lodash/forEach\");\n/**\n * Adds a class to an element\n *\n * @param {HTMLElement} element The element to add the class to.\n * @param {string} className The class to add.\n * @returns {void}\n */\nvar addClass = function (element, className) {\n    var classes = element.className.split(\" \");\n    if (-1 === classes.indexOf(className)) {\n        classes.push(className);\n    }\n    element.className = classes.join(\" \");\n};\n/**\n * Removes a class from an element\n *\n * @param {HTMLElement} element The element to remove the class from.\n * @param {string} className The class to remove.\n * @returns {void}\n */\nvar removeClass = function (element, className) {\n    var classes = element.className.split(\" \");\n    var foundClass = classes.indexOf(className);\n    if (-1 !== foundClass) {\n        classes.splice(foundClass, 1);\n    }\n    element.className = classes.join(\" \");\n};\n/**\n * Removes multiple classes from an element\n *\n * @param {HTMLElement} element The element to remove the classes from.\n * @param {Array} classes A list of classes to remove\n * @returns {void}\n */\nvar removeClasses = function (element, classes) {\n    forEach(classes, this.removeClass.bind(null, element));\n};\n/**\n * Checks whether an element has a specific class.\n *\n * @param {HTMLElement} element The element to check for the class.\n * @param {string} className The class to look for.\n * @returns {boolean} Whether or not the class is present.\n */\nvar hasClass = function (element, className) {\n    return element.className.indexOf(className) > -1;\n};\nmodule.exports = {\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeClasses: removeClasses,\n};\n//# sourceMappingURL=domManipulation.js.map"]}