{"version":3,"sources":["../../js/snippetPreview.js"],"names":["isEmpty","require","isElement","isUndefined","clone","defaultsDeep","forEach","debounce","createWordRegex","stripHTMLTags","stripFullTags","stripSpaces","replaceDiacritics","transliterate","templates","snippetEditorTemplate","snippetEditor","hiddenElement","hiddenSpan","SnippetPreviewToggler","domManipulation","defaults","data","title","metaDesc","urlPath","titleWidth","metaHeight","placeholder","defaultValue","baseURL","callbacks","saveSnippetData","addTrailingSlash","metaDescriptionDate","previewMode","titleMaxLength","metadescriptionMaxLength","inputPreviewBindings","preview","inputField","getBaseURL","opts","hasApp","refObj","rawData","baseUrl","retrieveUnformattedText","key","updateUnformattedText","value","element","input","hasTrailingSlash","url","indexOf","length","hasProgressSupport","progressElement","document","createElement","max","rateTitleLength","titleLength","rating","rateMetaDescLength","metaDescLength","updateProgressBar","maximum","barElement","progress","allClasses","removeClasses","addClass","getElementsByClassName","style","width","SnippetPreview","analyzerApp","i18n","snippetTitle","snippetCite","snippetMeta","metaTitle","targetElement","Error","_currentFocus","_currentHover","unformattedText","Object","defineProperty","get","bind","set","prototype","renderTemplate","innerHTML","raw","meta","rendered","formatTitle","formatUrl","formatCite","formatMeta","edit","dgettext","slug","metaDescription","save","snippetPreview","titleLabel","slugLabel","metaDescriptionLabel","snippetPreviewDescription","desktopPreviewMode","mobilePreviewMode","isScrollableHint","measurers","getElementById","urlBase","container","formContainer","editToggle","closeEditor","formFields","label","parentNode","initPreviewToggler","setInitialView","opened","createMeasurementElements","updateProgressBars","snippetPreviewToggle","initialize","bindEvents","refresh","output","htmlOutput","renderOutput","renderSnippetStyle","measureTitle","measureMetaDescription","getAnalyzerTitle","hasPluggable","pluggable","_applyModifications","getAnalyzerMetaDesc","getAnalyzerData","call","callRegisteredEventBinder","bindElementEvents","init","cite","html","loaded","replace","keyword","formatKeywordUrl","getMetaText","substring","formatKeyword","metaText","excerpt","text","getIndexMatches","indexMatches","i","match","push","getPeriodMatches","periodMatches","textString","keywordRegex","str","transliterateKeyword","locale","dashedKeyword","metaDescElement","removeClass","reRender","checkTextLength","event","currentTarget","textContent","id","className","YoastSEO","app","snippet_meta","snippet_title","getUnformattedText","currentElement","setUnformattedText","elem","validateFields","metaDescriptionRating","titleRating","previewWidth","getBoundingClientRect","setVisibility","handleWindowResizing","setScrollHintVisibility","elems","addEventListener","changedInput","toggleEditor","window","binding","previewElement","inputElement","openEditor","focus","_updateFocusCarets","_updateHoverCarets","updateDataFromDOM","setAttribute","focusedLabel","focusedPreview","hoveredLabel","setTitle","setUrlPath","setMetaDescription","metaDescriptionElement","spanHolder","offsetWidth","whiteSpace","body","appendChild","childNodes","metaHeightElement","offsetHeight","getTitleWidth","disableEnter","ev","textFeedback","showEditIcon","hideEditIcon","setFocus","module","exports"],"mappings":"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","file":"snippetPreview.js","sourcesContent":["\"use strict\";\nvar isEmpty = require(\"lodash/isEmpty\");\nvar isElement = require(\"lodash/isElement\");\nvar isUndefined = require(\"lodash/isUndefined\");\nvar clone = require(\"lodash/clone\");\nvar defaultsDeep = require(\"lodash/defaultsDeep\");\nvar forEach = require(\"lodash/forEach\");\nvar debounce = require(\"lodash/debounce\");\nvar createWordRegex = require(\"./stringProcessing/createWordRegex.js\");\nvar stripHTMLTags = require(\"./stringProcessing/stripHTMLTags.js\").stripFullTags;\nvar stripSpaces = require(\"./stringProcessing/stripSpaces.js\");\nvar replaceDiacritics = require(\"./stringProcessing/replaceDiacritics.js\");\nvar transliterate = require(\"./stringProcessing/transliterate.js\");\nvar templates = require(\"./templates.js\");\nvar snippetEditorTemplate = templates.snippetEditor;\nvar hiddenElement = templates.hiddenSpan;\nvar SnippetPreviewToggler = require(\"./snippetPreviewToggler\");\nvar domManipulation = require(\"./helpers/domManipulation.js\");\nvar defaults = {\n    data: {\n        title: \"\",\n        metaDesc: \"\",\n        urlPath: \"\",\n        titleWidth: 0,\n        metaHeight: 0,\n    },\n    placeholder: {\n        title: \"This is an example title - edit by clicking here\",\n        metaDesc: \"Modify your meta description by editing it right here\",\n        urlPath: \"example-post/\",\n    },\n    defaultValue: {\n        title: \"\",\n        metaDesc: \"\",\n    },\n    baseURL: \"http://example.com/\",\n    callbacks: {\n        saveSnippetData: function () { },\n    },\n    addTrailingSlash: true,\n    metaDescriptionDate: \"\",\n    previewMode: \"desktop\",\n};\nvar titleMaxLength = 600;\nvar metadescriptionMaxLength = 320;\nvar inputPreviewBindings = [\n    {\n        preview: \"title_container\",\n        inputField: \"title\",\n    },\n    {\n        preview: \"url_container\",\n        inputField: \"urlPath\",\n    },\n    {\n        preview: \"meta_container\",\n        inputField: \"metaDesc\",\n    },\n];\n/**\n * Get's the base URL for this instance of the snippet preview.\n *\n * @private\n * @this SnippetPreview\n *\n * @returns {string} The base URL.\n */\nvar getBaseURL = function () {\n    var baseURL = this.opts.baseURL;\n    /*\n     * For backwards compatibility, if no URL was passed to the snippet editor we try to retrieve the base URL from the\n     * rawData in the App. This is because the scrapers used to be responsible for retrieving the baseURL, but the base\n     * URL is static so we can just pass it to the snippet editor.\n     */\n    if (this.hasApp() && !isEmpty(this.refObj.rawData.baseUrl) && this.opts.baseURL === defaults.baseURL) {\n        baseURL = this.refObj.rawData.baseUrl;\n    }\n    return baseURL;\n};\n/**\n * Retrieves unformatted text from the data object\n *\n * @private\n * @this SnippetPreview\n *\n * @param {string} key The key to retrieve.\n * @returns {string} The unformatted text.\n */\nfunction retrieveUnformattedText(key) {\n    return this.data[key];\n}\n/**\n * Update data and DOM objects when the unformatted text is updated, here for backwards compatibility\n *\n * @private\n * @this SnippetPreview\n *\n * @param {string} key The data key to update.\n * @param {string} value The value to update.\n * @returns {void}\n */\nfunction updateUnformattedText(key, value) {\n    this.element.input[key].value = value;\n    this.data[key] = value;\n}\n/**\n * Returns if a url has a trailing slash or not.\n *\n * @param {string} url The url to check for a trailing slash.\n * @returns {boolean} Whether or not the url contains a trailing slash.\n */\nfunction hasTrailingSlash(url) {\n    return url.indexOf(\"/\") === (url.length - 1);\n}\n/**\n * Detects if this browser has <progress> support. Also serves as a poor man's HTML5shiv.\n *\n * @private\n *\n * @returns {boolean} Whether or not the browser supports a <progress> element\n */\nfunction hasProgressSupport() {\n    var progressElement = document.createElement(\"progress\");\n    return !isUndefined(progressElement.max);\n}\n/**\n * Returns a rating based on the length of the title\n *\n * @param {number} titleLength the length of the title.\n * @returns {string} The rating given based on the title length.\n */\nfunction rateTitleLength(titleLength) {\n    var rating;\n    switch (true) {\n        case titleLength > 0 && titleLength <= 399:\n        case titleLength > 600:\n            rating = \"ok\";\n            break;\n        case titleLength >= 400 && titleLength <= 600:\n            rating = \"good\";\n            break;\n        default:\n            rating = \"bad\";\n            break;\n    }\n    return rating;\n}\n/**\n * Returns a rating based on the length of the meta description\n *\n * @param {number} metaDescLength the length of the meta description.\n * @returns {string} The rating given based on the description length.\n */\nfunction rateMetaDescLength(metaDescLength) {\n    var rating;\n    switch (true) {\n        case metaDescLength > 0 && metaDescLength < 120:\n        case metaDescLength > 320:\n            rating = \"ok\";\n            break;\n        case metaDescLength >= 120 && metaDescLength <= 320:\n            rating = \"good\";\n            break;\n        default:\n            rating = \"bad\";\n            break;\n    }\n    return rating;\n}\n/**\n * Updates a progress bar\n *\n * @private\n * @this SnippetPreview\n *\n * @param {HTMLElement} element The progress element that's rendered.\n * @param {number} value The current value.\n * @param {number} maximum The maximum allowed value.\n * @param {string} rating The SEO score rating for this value.\n * @returns {void}\n */\nfunction updateProgressBar(element, value, maximum, rating) {\n    var barElement, progress, allClasses = [\n        \"snippet-editor__progress--bad\",\n        \"snippet-editor__progress--ok\",\n        \"snippet-editor__progress--good\",\n    ];\n    element.value = value;\n    domManipulation.removeClasses(element, allClasses);\n    domManipulation.addClass(element, \"snippet-editor__progress--\" + rating);\n    if (!this.hasProgressSupport) {\n        barElement = element.getElementsByClassName(\"snippet-editor__progress-bar\")[0];\n        progress = (value / maximum) * 100;\n        barElement.style.width = progress + \"%\";\n    }\n}\n/**\n * @module snippetPreview\n */\n/**\n * Defines the config and outputTarget for the SnippetPreview\n *\n * @param {Object}         opts                           - Snippet preview options.\n * @param {App}            opts.analyzerApp               - The app object the snippet preview is part of.\n * @param {Object}         opts.placeholder               - The placeholder values for the fields, will be shown as\n * actual placeholders in the inputs and as a fallback for the preview.\n * @param {string}         opts.placeholder.title         - The placeholder title.\n * @param {string}         opts.placeholder.metaDesc      - The placeholder meta description.\n * @param {string}         opts.placeholder.urlPath       - The placeholder url.\n *\n * @param {Object}         opts.defaultValue              - The default value for the fields, if the user has not\n * changed a field, this value will be used for the analyzer, preview and the progress bars.\n * @param {string}         opts.defaultValue.title        - The default title.\n * @param {string}         opts.defaultValue.metaDesc     - The default meta description.\n * it.\n *\n * @param {string}         opts.baseURL                   - The basic URL as it will be displayed in google.\n * @param {HTMLElement}    opts.targetElement             - The target element that contains this snippet editor.\n *\n * @param {Object}         opts.callbacks                 - Functions that are called on specific instances.\n * @param {Function}       opts.callbacks.saveSnippetData - Function called when the snippet data is changed.\n *\n * @param {boolean}        opts.addTrailingSlash          - Whether or not to add a trailing slash to the URL.\n * @param {string}         opts.metaDescriptionDate       - The date to display before the meta description.\n *\n * @param {Jed}            opts.i18n                      - The translation object.\n *\n * @param {string}         opts.previewMode               - The current preview mode.\n *\n * @property {App}         refObj                         - The connected app object.\n * @property {Jed}         i18n                           - The translation object.\n *\n * @property {HTMLElement} targetElement                  - The target element that contains this snippet editor.\n *\n * @property {Object}      element                        - The elements for this snippet editor.\n * @property {Object}      element.rendered               - The rendered elements.\n * @property {HTMLElement} element.rendered.title         - The rendered title element.\n * @property {HTMLElement} element.rendered.urlPath       - The rendered url path element.\n * @property {HTMLElement} element.rendered.urlBase       - The rendered url base element.\n * @property {HTMLElement} element.rendered.metaDesc      - The rendered meta description element.\n *\n * @property {HTMLElement} element.measurers.titleWidth   - The rendered title width element.\n * @property {HTMLElement} element.measurers.metaHeight   - The rendered meta height element.\n *\n * @property {Object}      element.input                  - The input elements.\n * @property {HTMLElement} element.input.title            - The title input element.\n * @property {HTMLElement} element.input.urlPath          - The url path input element.\n * @property {HTMLElement} element.input.metaDesc         - The meta description input element.\n *\n * @property {HTMLElement} element.container              - The main container element.\n * @property {HTMLElement} element.formContainer          - The form container element.\n * @property {HTMLElement} element.editToggle             - The button that toggles the editor form.\n *\n * @property {Object}      data                           - The data for this snippet editor.\n * @property {string}      data.title                     - The title.\n * @property {string}      data.urlPath                   - The url path.\n * @property {string}      data.metaDesc                  - The meta description.\n * @property {int}         data.titleWidth                - The width of the title in pixels.\n * @property {int}         data.metaHeight                - The height of the meta description in pixels.\n *\n * @property {string}      baseURL                        - The basic URL as it will be displayed in google.\n *\n * @property {boolean}     hasProgressSupport             - Whether this browser supports the <progress> element.\n *\n * @constructor\n */\nvar SnippetPreview = function (opts) {\n    defaultsDeep(opts, defaults);\n    this.data = opts.data;\n    if (!isUndefined(opts.analyzerApp)) {\n        this.refObj = opts.analyzerApp;\n        this.i18n = this.refObj.i18n;\n        this.data = {\n            title: this.refObj.rawData.snippetTitle || \"\",\n            urlPath: this.refObj.rawData.snippetCite || \"\",\n            metaDesc: this.refObj.rawData.snippetMeta || \"\",\n        };\n        // For backwards compatibility set the metaTitle as placeholder.\n        if (!isEmpty(this.refObj.rawData.metaTitle)) {\n            opts.placeholder.title = this.refObj.rawData.metaTitle;\n        }\n    }\n    if (!isUndefined(opts.i18n)) {\n        this.i18n = opts.i18n;\n    }\n    if (!isElement(opts.targetElement)) {\n        throw new Error(\"The snippet preview requires a valid target element\");\n    }\n    this.opts = opts;\n    this._currentFocus = null;\n    this._currentHover = null;\n    // For backwards compatibility monitor the unformatted text for changes and reflect them in the preview\n    this.unformattedText = {};\n    Object.defineProperty(this.unformattedText, \"snippet_cite\", {\n        get: retrieveUnformattedText.bind(this, \"urlPath\"),\n        set: updateUnformattedText.bind(this, \"urlPath\"),\n    });\n    Object.defineProperty(this.unformattedText, \"snippet_meta\", {\n        get: retrieveUnformattedText.bind(this, \"metaDesc\"),\n        set: updateUnformattedText.bind(this, \"metaDesc\"),\n    });\n    Object.defineProperty(this.unformattedText, \"snippet_title\", {\n        get: retrieveUnformattedText.bind(this, \"title\"),\n        set: updateUnformattedText.bind(this, \"title\"),\n    });\n};\n/**\n * Renders snippet editor and adds it to the targetElement\n * @returns {void}\n */\nSnippetPreview.prototype.renderTemplate = function () {\n    var targetElement = this.opts.targetElement;\n    targetElement.innerHTML = snippetEditorTemplate({\n        raw: {\n            title: this.data.title,\n            snippetCite: this.data.urlPath,\n            meta: this.data.metaDesc,\n        },\n        rendered: {\n            title: this.formatTitle(),\n            baseUrl: this.formatUrl(),\n            snippetCite: this.formatCite(),\n            meta: this.formatMeta(),\n        },\n        metaDescriptionDate: this.opts.metaDescriptionDate,\n        placeholder: this.opts.placeholder,\n        i18n: {\n            edit: this.i18n.dgettext(\"js-text-analysis\", \"Edit snippet\"),\n            title: this.i18n.dgettext(\"js-text-analysis\", \"SEO title\"),\n            slug: this.i18n.dgettext(\"js-text-analysis\", \"Slug\"),\n            metaDescription: this.i18n.dgettext(\"js-text-analysis\", \"Meta description\"),\n            save: this.i18n.dgettext(\"js-text-analysis\", \"Close snippet editor\"),\n            snippetPreview: this.i18n.dgettext(\"js-text-analysis\", \"Snippet preview\"),\n            titleLabel: this.i18n.dgettext(\"js-text-analysis\", \"SEO title preview:\"),\n            slugLabel: this.i18n.dgettext(\"js-text-analysis\", \"Slug preview:\"),\n            metaDescriptionLabel: this.i18n.dgettext(\"js-text-analysis\", \"Meta description preview:\"),\n            snippetPreviewDescription: this.i18n.dgettext(\"js-text-analysis\", \"You can click on each element in the preview to jump to the Snippet Editor.\"),\n            desktopPreviewMode: this.i18n.dgettext(\"js-text-analysis\", \"Desktop preview\"),\n            mobilePreviewMode: this.i18n.dgettext(\"js-text-analysis\", \"Mobile preview\"),\n            isScrollableHint: this.i18n.dgettext(\"js-text-analysis\", \"Scroll to see the preview content.\"),\n        },\n    });\n    this.element = {\n        measurers: {\n            metaHeight: null,\n        },\n        rendered: {\n            title: document.getElementById(\"snippet_title\"),\n            urlBase: document.getElementById(\"snippet_citeBase\"),\n            urlPath: document.getElementById(\"snippet_cite\"),\n            metaDesc: document.getElementById(\"snippet_meta\"),\n        },\n        input: {\n            title: targetElement.getElementsByClassName(\"js-snippet-editor-title\")[0],\n            urlPath: targetElement.getElementsByClassName(\"js-snippet-editor-slug\")[0],\n            metaDesc: targetElement.getElementsByClassName(\"js-snippet-editor-meta-description\")[0],\n        },\n        progress: {\n            title: targetElement.getElementsByClassName(\"snippet-editor__progress-title\")[0],\n            metaDesc: targetElement.getElementsByClassName(\"snippet-editor__progress-meta-description\")[0],\n        },\n        container: document.getElementById(\"snippet_preview\"),\n        formContainer: targetElement.getElementsByClassName(\"snippet-editor__form\")[0],\n        editToggle: targetElement.getElementsByClassName(\"snippet-editor__edit-button\")[0],\n        closeEditor: targetElement.getElementsByClassName(\"snippet-editor__submit\")[0],\n        formFields: targetElement.getElementsByClassName(\"snippet-editor__form-field\"),\n    };\n    this.element.label = {\n        title: this.element.input.title.parentNode,\n        urlPath: this.element.input.urlPath.parentNode,\n        metaDesc: this.element.input.metaDesc.parentNode,\n    };\n    this.element.preview = {\n        title: this.element.rendered.title.parentNode,\n        urlPath: this.element.rendered.urlPath.parentNode,\n        metaDesc: this.element.rendered.metaDesc.parentNode,\n    };\n    this.hasProgressSupport = hasProgressSupport();\n    if (this.hasProgressSupport) {\n        this.element.progress.title.max = titleMaxLength;\n        this.element.progress.metaDesc.max = metadescriptionMaxLength;\n    }\n    else {\n        forEach(this.element.progress, function (progressElement) {\n            domManipulation.addClass(progressElement, \"snippet-editor__progress--fallback\");\n        });\n    }\n    this.initPreviewToggler();\n    this.setInitialView();\n    this.opened = false;\n    this.createMeasurementElements();\n    this.updateProgressBars();\n};\n/**\n * Initializes the Snippet Preview Toggler.\n * @returns {void}\n */\nSnippetPreview.prototype.initPreviewToggler = function () {\n    this.snippetPreviewToggle = new SnippetPreviewToggler(this.opts.previewMode, this.opts.targetElement.getElementsByClassName(\"snippet-editor__view-icon\"));\n    this.snippetPreviewToggle.initialize();\n    this.snippetPreviewToggle.bindEvents();\n};\n/**\n * Refreshes the snippet editor rendered HTML\n * @returns {void}\n */\nSnippetPreview.prototype.refresh = function () {\n    this.output = this.htmlOutput();\n    this.renderOutput();\n    this.renderSnippetStyle();\n    this.measureTitle();\n    this.measureMetaDescription();\n    this.updateProgressBars();\n};\n/**\n * Returns the title as meant for the analyzer\n *\n * @private\n * @this SnippetPreview\n *\n * @returns {string} The title that is meant for the analyzer.\n */\nfunction getAnalyzerTitle() {\n    var title = this.data.title;\n    if (isEmpty(title)) {\n        title = this.opts.defaultValue.title;\n    }\n    if (this.hasPluggable()) {\n        title = this.refObj.pluggable._applyModifications(\"data_page_title\", title);\n    }\n    return stripSpaces(title);\n}\n/**\n * Returns the metaDescription, includes the date if it is set.\n *\n * @private\n * @this SnippetPreview\n *\n * @returns {string} The meta data for the analyzer.\n */\nvar getAnalyzerMetaDesc = function () {\n    var metaDesc = this.data.metaDesc;\n    if (isEmpty(metaDesc)) {\n        metaDesc = this.opts.defaultValue.metaDesc;\n    }\n    if (this.hasPluggable()) {\n        metaDesc = this.refObj.pluggable._applyModifications(\"data_meta_desc\", metaDesc);\n    }\n    if (!isEmpty(this.opts.metaDescriptionDate) && !isEmpty(metaDesc)) {\n        metaDesc = this.opts.metaDescriptionDate + \" - \" + this.data.metaDesc;\n    }\n    return stripSpaces(metaDesc);\n};\n/**\n * Returns the data from the snippet preview.\n *\n * @returns {Object} The collected data for the analyzer.\n */\nSnippetPreview.prototype.getAnalyzerData = function () {\n    return {\n        title: getAnalyzerTitle.call(this),\n        url: this.data.urlPath,\n        metaDesc: getAnalyzerMetaDesc.call(this),\n    };\n};\n/**\n * Calls the event binder that has been registered using the callbacks option in the arguments of the App.\n * @returns {void}\n */\nSnippetPreview.prototype.callRegisteredEventBinder = function () {\n    if (this.hasApp()) {\n        this.refObj.callbacks.bindElementEvents(this.refObj);\n    }\n};\n/**\n *  Checks if title and url are set so they can be rendered in the snippetPreview\n *  @returns {void}\n */\nSnippetPreview.prototype.init = function () {\n    if (this.hasApp() &&\n        this.refObj.rawData.metaTitle !== null &&\n        this.refObj.rawData.cite !== null) {\n        this.refresh();\n    }\n};\n/**\n * Creates html object to contain the strings for the snippetpreview\n *\n * @returns {Object} The HTML output of the collected data.\n */\nSnippetPreview.prototype.htmlOutput = function () {\n    var html = {};\n    html.title = this.formatTitle();\n    html.cite = this.formatCite();\n    html.meta = this.formatMeta();\n    html.url = this.formatUrl();\n    return html;\n};\n/**\n * Formats the title for the snippet preview. If title and pageTitle are empty, sampletext is used\n *\n * @returns {string} The correctly formatted title.\n */\nSnippetPreview.prototype.formatTitle = function () {\n    var title = this.data.title;\n    // Fallback to the default if the title is empty.\n    if (isEmpty(title)) {\n        title = this.opts.defaultValue.title;\n    }\n    // For rendering we can fallback to the placeholder as well.\n    if (isEmpty(title)) {\n        title = this.opts.placeholder.title;\n    }\n    // Apply modification to the title before showing it.\n    if (this.hasPluggable() && this.refObj.pluggable.loaded) {\n        title = this.refObj.pluggable._applyModifications(\"data_page_title\", title);\n    }\n    title = stripHTMLTags(title);\n    // As an ultimate fallback provide the user with a helpful message.\n    if (isEmpty(title)) {\n        title = this.i18n.dgettext(\"js-text-analysis\", \"Please provide an SEO title by editing the snippet below.\");\n    }\n    return title;\n};\n/**\n * Formats the base url for the snippet preview. Removes the protocol name from the URL.\n *\n * @returns {string} Formatted base url for the snippet preview.\n */\nSnippetPreview.prototype.formatUrl = function () {\n    var url = getBaseURL.call(this);\n    // Removes the http part of the url, google displays https:// if the website supports it.\n    return url.replace(/http:\\/\\//ig, \"\");\n};\n/**\n * Formats the url for the snippet preview\n *\n * @returns {string} Formatted URL for the snippet preview.\n */\nSnippetPreview.prototype.formatCite = function () {\n    var cite = this.data.urlPath;\n    cite = replaceDiacritics(stripHTMLTags(cite));\n    // Fallback to the default if the cite is empty.\n    if (isEmpty(cite)) {\n        cite = this.opts.placeholder.urlPath;\n    }\n    if (this.hasApp() && !isEmpty(this.refObj.rawData.keyword)) {\n        cite = this.formatKeywordUrl(cite);\n    }\n    if (this.opts.addTrailingSlash && !hasTrailingSlash(cite)) {\n        cite = cite + \"/\";\n    }\n    // URL's cannot contain whitespace so replace it by dashes.\n    cite = cite.replace(/\\s/g, \"-\");\n    return cite;\n};\n/**\n * Formats the meta description for the snippet preview, if it's empty retrieves it using getMetaText.\n *\n * @returns {string} Formatted meta description.\n */\nSnippetPreview.prototype.formatMeta = function () {\n    var meta = this.data.metaDesc;\n    // If no meta has been set, generate one.\n    if (isEmpty(meta)) {\n        meta = this.getMetaText();\n    }\n    // Apply modification to the desc before showing it.\n    if (this.hasPluggable() && this.refObj.pluggable.loaded) {\n        meta = this.refObj.pluggable._applyModifications(\"data_meta_desc\", meta);\n    }\n    meta = stripHTMLTags(meta);\n    // Cut-off the meta description according to the maximum length\n    meta = meta.substring(0, metadescriptionMaxLength);\n    if (this.hasApp() && !isEmpty(this.refObj.rawData.keyword)) {\n        meta = this.formatKeyword(meta);\n    }\n    // As an ultimate fallback provide the user with a helpful message.\n    if (isEmpty(meta)) {\n        meta = this.i18n.dgettext(\"js-text-analysis\", \"Please provide a meta description by editing the snippet below.\");\n    }\n    return meta;\n};\n/**\n * Generates a meta description with an educated guess based on the passed text and excerpt. It uses the keyword to\n * select an appropriate part of the text. If the keyword isn't present it takes the first 320 characters of the text.\n * If both the keyword, text and excerpt are empty this function returns the sample text.\n *\n * @returns {string} A generated meta description.\n */\nSnippetPreview.prototype.getMetaText = function () {\n    var metaText = this.opts.defaultValue.metaDesc;\n    if (this.hasApp() && !isUndefined(this.refObj.rawData.excerpt) && isEmpty(metaText)) {\n        metaText = this.refObj.rawData.excerpt;\n    }\n    if (this.hasApp() && !isUndefined(this.refObj.rawData.text) && isEmpty(metaText)) {\n        metaText = this.refObj.rawData.text;\n        if (this.hasPluggable() && this.refObj.pluggable.loaded) {\n            metaText = this.refObj.pluggable._applyModifications(\"content\", metaText);\n        }\n    }\n    metaText = stripHTMLTags(metaText);\n    return metaText.substring(0, metadescriptionMaxLength);\n};\n/**\n * Builds an array with all indexes of the keyword\n * @returns {Array} Array with matches\n */\nSnippetPreview.prototype.getIndexMatches = function () {\n    var indexMatches = [];\n    var i = 0;\n    // Starts at 0, locates first match of the keyword.\n    var match = this.refObj.rawData.text.indexOf(this.refObj.rawData.keyword, i);\n    // Runs the loop untill no more indexes are found, and match returns -1.\n    while (match > -1) {\n        indexMatches.push(match);\n        // Pushes location to indexMatches and increase i with the length of keyword.\n        i = match + this.refObj.rawData.keyword.length;\n        match = this.refObj.rawData.text.indexOf(this.refObj.rawData.keyword, i);\n    }\n    return indexMatches;\n};\n/**\n * Builds an array with indexes of all sentence ends (select on .)\n * @returns {Array} Array with sentences.\n */\nSnippetPreview.prototype.getPeriodMatches = function () {\n    var periodMatches = [0];\n    var match;\n    var i = 0;\n    while ((match = this.refObj.rawData.text.indexOf(\".\", i)) > -1) {\n        periodMatches.push(match);\n        i = match + 1;\n    }\n    return periodMatches;\n};\n/**\n * Formats the keyword for use in the snippetPreview by adding <strong>-tags\n * strips unwanted characters that could break the regex or give unwanted results.\n *\n * @param {string} textString The keyword string that needs to be formatted.\n * @returns {string} The formatted keyword.\n */\nSnippetPreview.prototype.formatKeyword = function (textString) {\n    // Removes characters from the keyword that could break the regex, or give unwanted results.\n    var keyword = this.refObj.rawData.keyword;\n    // Match keyword case-insensitively.\n    var keywordRegex = createWordRegex(keyword, \"\", false);\n    textString = textString.replace(keywordRegex, function (str) {\n        return \"<strong>\" + str + \"</strong>\";\n    });\n    // Transliterate the keyword for highlighting\n    var transliterateKeyword = transliterate(keyword, this.refObj.rawData.locale);\n    if (transliterateKeyword !== keyword) {\n        keywordRegex = createWordRegex(transliterateKeyword, \"\", false);\n        textString = textString.replace(keywordRegex, function (str) {\n            return \"<strong>\" + str + \"</strong>\";\n        });\n    }\n    return textString;\n};\n/**\n * Formats the keyword for use in the URL by accepting - and _ in stead of space and by adding\n * <strong>-tags\n * Strips unwanted characters that could break the regex or give unwanted results\n *\n * @param {string} textString The keyword string that needs to be formatted.\n * @returns {XML|string|void} The formatted keyword string to be used in the URL.\n */\nSnippetPreview.prototype.formatKeywordUrl = function (textString) {\n    var keyword = this.refObj.rawData.keyword;\n    keyword = transliterate(keyword, this.refObj.rawData.locale);\n    keyword = keyword.replace(/'/, \"\");\n    var dashedKeyword = keyword.replace(/\\s/g, \"-\");\n    // Match keyword case-insensitively.\n    var keywordRegex = createWordRegex(dashedKeyword, \"\\\\-\");\n    // Make the keyword bold in the textString.\n    return textString.replace(keywordRegex, function (str) {\n        return \"<strong>\" + str + \"</strong>\";\n    });\n};\n/**\n * Renders the outputs to the elements on the page.\n * @returns {void}\n */\nSnippetPreview.prototype.renderOutput = function () {\n    this.element.rendered.title.innerHTML = this.output.title;\n    this.element.rendered.urlPath.innerHTML = this.output.cite;\n    this.element.rendered.urlBase.innerHTML = this.output.url;\n    this.element.rendered.metaDesc.innerHTML = this.output.meta;\n};\n/**\n * Makes the rendered meta description gray if no meta description has been set by the user.\n * @returns {void}\n */\nSnippetPreview.prototype.renderSnippetStyle = function () {\n    var metaDescElement = this.element.rendered.metaDesc;\n    var metaDesc = getAnalyzerMetaDesc.call(this);\n    if (isEmpty(metaDesc)) {\n        domManipulation.addClass(metaDescElement, \"desc-render\");\n        domManipulation.removeClass(metaDescElement, \"desc-default\");\n    }\n    else {\n        domManipulation.addClass(metaDescElement, \"desc-default\");\n        domManipulation.removeClass(metaDescElement, \"desc-render\");\n    }\n};\n/**\n * Function to call init, to rerender the snippetpreview\n * @returns {void}\n */\nSnippetPreview.prototype.reRender = function () {\n    this.init();\n};\n/**\n * Checks text length of the snippetmeta and snippet title, shortens it if it is too long.\n * @param {Object} event The event to check the text length from.\n * @returns {void}\n */\nSnippetPreview.prototype.checkTextLength = function (event) {\n    var text = event.currentTarget.textContent;\n    switch (event.currentTarget.id) {\n        case \"snippet_meta\":\n            event.currentTarget.className = \"desc\";\n            if (text.length > metadescriptionMaxLength) {\n                /* eslint-disable */\n                YoastSEO.app.snippetPreview.unformattedText.snippet_meta = event.currentTarget.textContent;\n                /* eslint-enable */\n                event.currentTarget.textContent = text.substring(0, metadescriptionMaxLength);\n            }\n            break;\n        case \"snippet_title\":\n            event.currentTarget.className = \"title\";\n            if (text.length > titleMaxLength) {\n                /* eslint-disable */\n                YoastSEO.app.snippetPreview.unformattedText.snippet_title = event.currentTarget.textContent;\n                /* eslint-enable */\n                event.currentTarget.textContent = text.substring(0, titleMaxLength);\n            }\n            break;\n        default:\n            break;\n    }\n};\n/**\n * When clicked on an element in the snippet, checks fills the textContent with the data from the unformatted text.\n * This removes the keyword highlighting and modified data so the original content can be editted.\n * @param {Object} event The event to get the unformatted text from.\n * @returns {void}\n */\nSnippetPreview.prototype.getUnformattedText = function (event) {\n    var currentElement = event.currentTarget.id;\n    if (typeof this.unformattedText[currentElement] !== \"undefined\") {\n        event.currentTarget.textContent = this.unformattedText[currentElement];\n    }\n};\n/**\n * When text is entered into the snippetPreview elements, the text is set in the unformattedText object.\n * This allows the visible data to be editted in the snippetPreview.\n * @param {Object} event The event to set the unformatted text from.\n * @returns {void}\n */\nSnippetPreview.prototype.setUnformattedText = function (event) {\n    var elem = event.currentTarget.id;\n    this.unformattedText[elem] = document.getElementById(elem).textContent;\n};\n/**\n * Validates all fields and highlights errors.\n * @returns {void}\n */\nSnippetPreview.prototype.validateFields = function () {\n    var metaDescription = getAnalyzerMetaDesc.call(this);\n    var title = getAnalyzerTitle.call(this);\n    if (metaDescription.length > metadescriptionMaxLength) {\n        domManipulation.addClass(this.element.input.metaDesc, \"snippet-editor__field--invalid\");\n    }\n    else {\n        domManipulation.removeClass(this.element.input.metaDesc, \"snippet-editor__field--invalid\");\n    }\n    if (title.length > titleMaxLength) {\n        domManipulation.addClass(this.element.input.title, \"snippet-editor__field--invalid\");\n    }\n    else {\n        domManipulation.removeClass(this.element.input.title, \"snippet-editor__field--invalid\");\n    }\n};\n/**\n * Updates progress bars based on the data\n * @returns {void}\n */\nSnippetPreview.prototype.updateProgressBars = function () {\n    var metaDescriptionRating, titleRating, metaDescription;\n    metaDescription = getAnalyzerMetaDesc.call(this);\n    titleRating = rateTitleLength(this.data.titleWidth);\n    metaDescriptionRating = rateMetaDescLength(metaDescription.length);\n    updateProgressBar.call(this, this.element.progress.title, this.data.titleWidth, titleMaxLength, titleRating);\n    updateProgressBar.call(this, this.element.progress.metaDesc, metaDescription.length, metadescriptionMaxLength, metaDescriptionRating);\n};\n/**\n * Gets the width of the Snippet Preview to set its initial view to desktop or mobile.\n * @returns {void}\n */\nSnippetPreview.prototype.setInitialView = function () {\n    var previewWidth = document.getElementById(\"snippet_preview\").getBoundingClientRect().width;\n    this.snippetPreviewToggle.setVisibility(previewWidth);\n};\n/**\n * When the window is resized, gets the width of the Snippet Preview to set the Scroll Hint visibility.\n * @returns {void}\n */\nSnippetPreview.prototype.handleWindowResizing = debounce(function () {\n    var previewWidth = document.getElementById(\"snippet_preview\").getBoundingClientRect().width;\n    this.snippetPreviewToggle.setScrollHintVisibility(previewWidth);\n}, 25);\n/**\n * Binds the reloadSnippetText function to the blur of the snippet inputs.\n * @returns {void}\n */\nSnippetPreview.prototype.bindEvents = function () {\n    var targetElement, elems = [\"title\", \"slug\", \"meta-description\"];\n    forEach(elems, function (elem) {\n        targetElement = document.getElementsByClassName(\"js-snippet-editor-\" + elem)[0];\n        targetElement.addEventListener(\"keydown\", this.changedInput.bind(this));\n        targetElement.addEventListener(\"keyup\", this.changedInput.bind(this));\n        targetElement.addEventListener(\"input\", this.changedInput.bind(this));\n        targetElement.addEventListener(\"focus\", this.changedInput.bind(this));\n        targetElement.addEventListener(\"blur\", this.changedInput.bind(this));\n    }.bind(this));\n    this.element.editToggle.addEventListener(\"click\", this.toggleEditor.bind(this));\n    this.element.closeEditor.addEventListener(\"click\", this.closeEditor.bind(this));\n    // Note: `handleWindowResizing` is called also in Yoast SEO when the WP admin menu state changes.\n    window.addEventListener(\"resize\", this.handleWindowResizing.bind(this));\n    // Loop through the bindings and bind a click handler to the click to focus the focus element.\n    forEach(inputPreviewBindings, function (binding) {\n        var previewElement = document.getElementById(binding.preview);\n        var inputElement = this.element.input[binding.inputField];\n        // Make the preview element click open the editor and focus the correct input.\n        previewElement.addEventListener(\"click\", function () {\n            this.openEditor();\n            inputElement.focus();\n        }.bind(this));\n        // Make focusing an input, update the carets.\n        inputElement.addEventListener(\"focus\", function () {\n            this._currentFocus = binding.inputField;\n            this._updateFocusCarets();\n        }.bind(this));\n        // Make removing focus from an element, update the carets.\n        inputElement.addEventListener(\"blur\", function () {\n            this._currentFocus = null;\n            this._updateFocusCarets();\n        }.bind(this));\n        previewElement.addEventListener(\"mouseover\", function () {\n            this._currentHover = binding.inputField;\n            this._updateHoverCarets();\n        }.bind(this));\n        previewElement.addEventListener(\"mouseout\", function () {\n            this._currentHover = null;\n            this._updateHoverCarets();\n        }.bind(this));\n    }.bind(this));\n};\n/**\n * Updates snippet preview on changed input. It's debounced so that we can call this function as much as we want.\n * @returns {void}\n */\nSnippetPreview.prototype.changedInput = debounce(function () {\n    this.updateDataFromDOM();\n    this.validateFields();\n    this.updateProgressBars();\n    this.refresh();\n    if (this.hasApp()) {\n        this.refObj.refresh();\n    }\n}, 25);\n/**\n * Updates our data object from the DOM\n * @returns {void}\n */\nSnippetPreview.prototype.updateDataFromDOM = function () {\n    this.data.title = this.element.input.title.value;\n    this.data.urlPath = this.element.input.urlPath.value;\n    this.data.metaDesc = this.element.input.metaDesc.value;\n    // Clone so the data isn't changeable.\n    this.opts.callbacks.saveSnippetData(clone(this.data));\n};\n/**\n * Opens the snippet editor.\n * @returns {void}\n */\nSnippetPreview.prototype.openEditor = function () {\n    this.element.editToggle.setAttribute(\"aria-expanded\", \"true\");\n    // Show these elements.\n    domManipulation.removeClass(this.element.formContainer, \"snippet-editor--hidden\");\n    this.opened = true;\n};\n/**\n * Closes the snippet editor.\n * @returns {void}\n */\nSnippetPreview.prototype.closeEditor = function () {\n    // Hide these elements.\n    domManipulation.addClass(this.element.formContainer, \"snippet-editor--hidden\");\n    this.element.editToggle.setAttribute(\"aria-expanded\", \"false\");\n    this.element.editToggle.focus();\n    this.opened = false;\n};\n/**\n * Toggles the snippet editor.\n * @returns {void}\n */\nSnippetPreview.prototype.toggleEditor = function () {\n    if (this.opened) {\n        this.closeEditor();\n    }\n    else {\n        this.openEditor();\n    }\n};\n/**\n * Updates carets before the preview and input fields.\n *\n * @private\n * @returns {void}\n */\nSnippetPreview.prototype._updateFocusCarets = function () {\n    var focusedLabel, focusedPreview;\n    // Disable all carets on the labels.\n    forEach(this.element.label, function (element) {\n        domManipulation.removeClass(element, \"snippet-editor__label--focus\");\n    });\n    // Disable all carets on the previews.\n    forEach(this.element.preview, function (element) {\n        domManipulation.removeClass(element, \"snippet-editor__container--focus\");\n    });\n    if (null !== this._currentFocus) {\n        focusedLabel = this.element.label[this._currentFocus];\n        focusedPreview = this.element.preview[this._currentFocus];\n        domManipulation.addClass(focusedLabel, \"snippet-editor__label--focus\");\n        domManipulation.addClass(focusedPreview, \"snippet-editor__container--focus\");\n    }\n};\n/**\n * Updates hover carets before the input fields.\n *\n * @private\n * @returns {void}\n */\nSnippetPreview.prototype._updateHoverCarets = function () {\n    var hoveredLabel;\n    forEach(this.element.label, function (element) {\n        domManipulation.removeClass(element, \"snippet-editor__label--hover\");\n    });\n    if (null !== this._currentHover) {\n        hoveredLabel = this.element.label[this._currentHover];\n        domManipulation.addClass(hoveredLabel, \"snippet-editor__label--hover\");\n    }\n};\n/**\n * Updates the title data and the title input field. This also means the snippet editor view is updated.\n *\n * @param {string} title The title to use in the input field.\n * @returns {void}\n */\nSnippetPreview.prototype.setTitle = function (title) {\n    this.element.input.title.value = title;\n    this.changedInput();\n};\n/**\n * Updates the url path data and the url path input field. This also means the snippet editor view is updated.\n *\n * @param {string} urlPath the URL path to use in the input field.\n * @returns {void}\n */\nSnippetPreview.prototype.setUrlPath = function (urlPath) {\n    this.element.input.urlPath.value = urlPath;\n    this.changedInput();\n};\n/**\n * Updates the meta description data and the meta description input field. This also means the snippet editor view is updated.\n *\n * @param {string} metaDesc the meta description to use in the input field.\n * @returns {void}\n */\nSnippetPreview.prototype.setMetaDescription = function (metaDesc) {\n    this.element.input.metaDesc.value = metaDesc;\n    this.changedInput();\n};\n/**\n * Creates elements with the purpose to calculate the sizes of elements and puts these elemenents to the body.\n *\n * @returns {void}\n */\nSnippetPreview.prototype.createMeasurementElements = function () {\n    var metaDescriptionElement, spanHolder;\n    metaDescriptionElement = hiddenElement({\n        width: document.getElementById(\"meta_container\").offsetWidth + \"px\",\n        whiteSpace: \"\",\n    });\n    spanHolder = document.createElement(\"div\");\n    spanHolder.className = \"yoast-measurement-elements-holder\";\n    spanHolder.innerHTML = metaDescriptionElement;\n    document.body.appendChild(spanHolder);\n    this.element.measurers.metaHeight = spanHolder.childNodes[0];\n};\n/**\n * Copies the title text to the title measure element to calculate the width in pixels.\n *\n * @returns {void}\n */\nSnippetPreview.prototype.measureTitle = function () {\n    if (this.element.rendered.title.offsetWidth !== 0 || this.element.rendered.title.textContent === \"\") {\n        this.data.titleWidth = this.element.rendered.title.offsetWidth;\n    }\n};\n/**\n * Copies the metadescription text to the metadescription measure element to calculate the height in pixels.\n *\n * @returns {void}\n */\nSnippetPreview.prototype.measureMetaDescription = function () {\n    var metaHeightElement = this.element.measurers.metaHeight;\n    metaHeightElement.innerHTML = this.element.rendered.metaDesc.innerHTML;\n    this.data.metaHeight = metaHeightElement.offsetHeight;\n};\n/**\n * Returns the width of the title in pixels.\n *\n * @returns {Number} The width of the title in pixels.\n */\nSnippetPreview.prototype.getTitleWidth = function () {\n    return this.data.titleWidth;\n};\n/**\n * Returns whether or not an app object is present.\n *\n * @returns {boolean} Whether or not there is an App object present.\n */\nSnippetPreview.prototype.hasApp = function () {\n    return !isUndefined(this.refObj);\n};\n/**\n * Returns whether or not a pluggable object is present.\n *\n * @returns {boolean} Whether or not there is a Pluggable object present.\n */\nSnippetPreview.prototype.hasPluggable = function () {\n    return !isUndefined(this.refObj) && !isUndefined(this.refObj.pluggable);\n};\n/* eslint-disable */\n/**\n * Used to disable enter as input. Returns false to prevent enter, and preventDefault and\n * cancelBubble to prevent\n * other elements from capturing this event.\n *\n * @deprecated\n * @param {KeyboardEvent} ev\n */\nSnippetPreview.prototype.disableEnter = function (ev) { };\n/**\n * Adds and remove the tooLong class when a text is too long.\n *\n * @deprecated\n * @param ev\n */\nSnippetPreview.prototype.textFeedback = function (ev) { };\n/**\n * shows the edit icon corresponding to the hovered element\n *\n * @deprecated\n *\n * @param ev\n */\nSnippetPreview.prototype.showEditIcon = function (ev) {\n};\n/**\n * removes all editIcon-classes, sets to snippet_container\n *\n * @deprecated\n */\nSnippetPreview.prototype.hideEditIcon = function () { };\n/**\n * sets focus on child element of the snippet_container that is clicked. Hides the editicon.\n *\n * @deprecated\n * @param ev\n */\nSnippetPreview.prototype.setFocus = function (ev) { };\n/* eslint-disable */\nmodule.exports = SnippetPreview;\n//# sourceMappingURL=snippetPreview.js.map"]}