{"version":3,"sources":["../../../js/bundledPlugins/previouslyUsedKeywords.js"],"names":["AssessmentResult","require","isUndefined","MissingArgument","PreviouslyUsedKeyword","app","args","usedKeywords","searchUrl","postUrl","prototype","registerPlugin","registerAssessment","getResult","assess","bind","isApplicable","paper","hasKeyword","updateKeywordUsage","scoreAssessment","previouslyUsedKeywords","i18n","count","id","text","dgettext","score","url","replace","sprintf","encodeURIComponent","getKeyword","researchPreviouslyUsedKeywords","keyword","length","researcher","previouslyUsedKeywordsResult","assessmentResult","setScore","setText","module","exports"],"mappings":"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","file":"previouslyUsedKeywords.js","sourcesContent":["\"use strict\";\nvar AssessmentResult = require(\"../values/AssessmentResult.js\");\nvar isUndefined = require(\"lodash/isUndefined\");\nvar MissingArgument = require(\"../errors/missingArgument\");\n/**\n * @param {object} app The app\n * @param {object} args An arguments object with usedKeywords, searchUrl, postUrl,\n * @param {object} args.usedKeywords An object with keywords and ids where they are used.\n * @param {string} args.searchUrl The url used to link to a search page when multiple usages of the keyword are found.\n * @param {string} args.postUrl The url used to link to a post when 1 usage of the keyword is found.\n * @constructor\n */\nvar PreviouslyUsedKeyword = function (app, args) {\n    if (isUndefined(app)) {\n        throw new MissingArgument(\"The previously keyword plugin requires the YoastSEO app\");\n    }\n    if (isUndefined(args)) {\n        args = {\n            usedKeywords: {},\n            searchUrl: \"\",\n            postUrl: \"\",\n        };\n    }\n    this.app = app;\n    this.usedKeywords = args.usedKeywords;\n    this.searchUrl = args.searchUrl;\n    this.postUrl = args.postUrl;\n};\n/**\n * Registers the assessment with the assessor.\n *\n * @returns {void}\n */\nPreviouslyUsedKeyword.prototype.registerPlugin = function () {\n    this.app.registerAssessment(\"usedKeywords\", {\n        getResult: this.assess.bind(this),\n        isApplicable: function (paper) {\n            return paper.hasKeyword();\n        },\n    }, \"previouslyUsedKeywords\");\n};\n/**\n * Updates the usedKeywords.\n *\n * @param {object} usedKeywords An object with keywords and ids where they are used.\n * @returns {void}\n */\nPreviouslyUsedKeyword.prototype.updateKeywordUsage = function (usedKeywords) {\n    this.usedKeywords = usedKeywords;\n};\n/**\n * Scores the previously used keyword assessment based on the count.\n *\n * @param {object} previouslyUsedKeywords The result of the previously used keywords research\n * @param {Paper} paper The paper object to research.\n * @param {Jed} i18n The i18n object.\n * @returns {object} the scoreobject with text and score.\n */\nPreviouslyUsedKeyword.prototype.scoreAssessment = function (previouslyUsedKeywords, paper, i18n) {\n    var count = previouslyUsedKeywords.count;\n    var id = previouslyUsedKeywords.id;\n    if (count === 0) {\n        return {\n            text: i18n.dgettext(\"js-text-analysis\", \"You've never used this focus keyword before, very good.\"),\n            score: 9,\n        };\n    }\n    if (count === 1) {\n        var url = \"<a href='\" + this.postUrl.replace(\"{id}\", id) + \"' target='_blank'>\";\n        return {\n            /* Translators: %1$s and %2$s expand to an admin link where the focus keyword is already used. %3$s and %4$s\n            expand to a link to an article on yoast.com about why you should not use a keyword more than once. */\n            text: i18n.sprintf(i18n.dgettext(\"js-text-analysis\", \"You've used this focus keyword %1$sonce before%2$s. \" +\n                \"It’s probably a good idea to read about %3$swhy you should not use your focus keyword more than once%4$s.\"), url, \"</a>\", \"<a href='https://yoa.st/20x' target='_blank' rel='noopener noreferrer'>\", \"</a>\"),\n            score: 6,\n        };\n    }\n    if (count > 1) {\n        url = \"<a href='\" + this.searchUrl.replace(\"{keyword}\", encodeURIComponent(paper.getKeyword())) + \"' target='_blank'>\";\n        return {\n            /* Translators: %1$s and $3$s expand to the admin search page for the focus keyword, %2$d expands to the number\n            of times this focus keyword has been used before, %4$s and %5$s expand to a link to an article on yoast.com\n            about why you should not use a keyword more than once. */\n            text: i18n.sprintf(i18n.dgettext(\"js-text-analysis\", \"You've used this focus keyword %1$s%2$d times before%3$s. \" +\n                \"It’s probably a good idea to read about %4$swhy you should not use your focus keyword more than once%5$s.\"), url, count, \"</a>\", \"<a href='https://yoa.st/20x' target='_blank' rel='noopener noreferrer'>\", \"</a>\"),\n            score: 1,\n        };\n    }\n};\n/**\n * Researches the previously used keywords, based on the used keywords and the keyword in the paper.\n *\n * @param {Paper} paper The paper object to research.\n * @returns {{id: number, count: number}} The object with the count and the id of the previously used keyword\n */\nPreviouslyUsedKeyword.prototype.researchPreviouslyUsedKeywords = function (paper) {\n    var keyword = paper.getKeyword();\n    var count = 0;\n    var id = 0;\n    if (!isUndefined(this.usedKeywords[keyword])) {\n        count = this.usedKeywords[keyword].length;\n        id = this.usedKeywords[keyword][0];\n    }\n    return {\n        id: id,\n        count: count,\n    };\n};\n/**\n * The assessment for the previously used keywords.\n *\n * @param {Paper} paper The Paper object to assess.\n * @param {Researcher} researcher The Researcher object containing all available researches.\n * @param {object} i18n The locale object.\n * @returns {AssessmentResult} The assessment result of the assessment\n */\nPreviouslyUsedKeyword.prototype.assess = function (paper, researcher, i18n) {\n    var previouslyUsedKeywords = this.researchPreviouslyUsedKeywords(paper);\n    var previouslyUsedKeywordsResult = this.scoreAssessment(previouslyUsedKeywords, paper, i18n);\n    var assessmentResult = new AssessmentResult();\n    assessmentResult.setScore(previouslyUsedKeywordsResult.score);\n    assessmentResult.setText(previouslyUsedKeywordsResult.text);\n    return assessmentResult;\n};\nmodule.exports = PreviouslyUsedKeyword;\n//# sourceMappingURL=previouslyUsedKeywords.js.map"]}