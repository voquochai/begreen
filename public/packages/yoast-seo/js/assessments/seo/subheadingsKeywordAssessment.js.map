{"version":3,"sources":["../../../../js/assessments/seo/subheadingsKeywordAssessment.js"],"names":["AssessmentResult","require","Assessment","merge","SubHeadingsKeywordAssessment","config","defaultConfig","scores","noMatches","oneMatch","multipleMatches","identifier","_config","paper","researcher","i18n","subHeadings","getResearch","assessmentResult","score","calculateScore","setScore","setText","translateScore","hasText","hasKeyword","matches","sprintf","dgettext","count","module","exports"],"mappings":"AAAA;;;;;;;;;;AACA,IAAIA,mBAAmBC,QAAQ,kCAAR,CAAvB;AACA,IAAIC,aAAaD,QAAQ,qBAAR,CAAjB;AACA,IAAIE,QAAQF,QAAQ,cAAR,CAAZ;AACA;;;;IAGMG,4B;;;AACF;;;;;;;AAOA,4CAAyB;AAAA,YAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AAAA;;AAErB,YAAIC,gBAAgB;AAChBC,oBAAQ;AACJC,2BAAW,CADP;AAEJC,0BAAU,CAFN;AAGJC,iCAAiB;AAHb;AADQ,SAApB;AAOA,cAAKC,UAAL,GAAkB,oBAAlB;AACA,cAAKC,OAAL,GAAeT,MAAMG,aAAN,EAAqBD,MAArB,CAAf;AAVqB;AAWxB;AACD;;;;;;;;;;;;;kCASUQ,K,EAAOC,U,EAAYC,I,EAAM;AAC/B,gBAAIC,cAAcF,WAAWG,WAAX,CAAuB,2BAAvB,CAAlB;AACA,gBAAIC,mBAAmB,IAAIlB,gBAAJ,EAAvB;AACA,gBAAImB,QAAQ,KAAKC,cAAL,CAAoBJ,WAApB,CAAZ;AACAE,6BAAiBG,QAAjB,CAA0BF,KAA1B;AACAD,6BAAiBI,OAAjB,CAAyB,KAAKC,cAAL,CAAoBJ,KAApB,EAA2BH,WAA3B,EAAwCD,IAAxC,CAAzB;AACA,mBAAOG,gBAAP;AACH;AACD;;;;;;;;;;qCAOaL,K,EAAO;AAChB,mBAAOA,MAAMW,OAAN,MAAmBX,MAAMY,UAAN,EAA1B;AACH;AACD;;;;;;;;;;uCAOeT,W,EAAa;AACxB,gBAAIA,YAAYU,OAAZ,KAAwB,CAA5B,EAA+B;AAC3B,uBAAO,KAAKd,OAAL,CAAaL,MAAb,CAAoBC,SAA3B;AACH;AACD,gBAAIQ,YAAYU,OAAZ,KAAwB,CAA5B,EAA+B;AAC3B,uBAAO,KAAKd,OAAL,CAAaL,MAAb,CAAoBE,QAA3B;AACH;AACD,gBAAIO,YAAYU,OAAZ,GAAsB,CAA1B,EAA6B;AACzB,uBAAO,KAAKd,OAAL,CAAaL,MAAb,CAAoBG,eAA3B;AACH;AACD,mBAAO,IAAP;AACH;AACD;;;;;;;;;;;;uCASeS,K,EAAOH,W,EAAaD,I,EAAM;AACrC,gBAAII,UAAU,KAAKP,OAAL,CAAaL,MAAb,CAAoBG,eAA9B,IAAiDS,UAAU,KAAKP,OAAL,CAAaL,MAAb,CAAoBE,QAAnF,EAA6F;AACzF,uBAAOM,KAAKY,OAAL,CAAaZ,KAAKa,QAAL,CAAc,kBAAd,EAAkC,2EAAlC,CAAb,EAA6HZ,YAAYa,KAAzI,EAAgJb,YAAYU,OAA5J,CAAP;AACH;AACD,gBAAIP,UAAU,KAAKP,OAAL,CAAaL,MAAb,CAAoBC,SAAlC,EAA6C;AACzC,uBAAOO,KAAKa,QAAL,CAAc,kBAAd,EAAkC,qFAAlC,CAAP;AACH;AACD,mBAAO,EAAP;AACH;;;;EAnFsC1B,U;;AAqF3C4B,OAAOC,OAAP,GAAiB3B,4BAAjB;AACA","file":"subheadingsKeywordAssessment.js","sourcesContent":["\"use strict\";\nlet AssessmentResult = require(\"../../values/AssessmentResult.js\");\nlet Assessment = require(\"../../assessment.js\");\nlet merge = require(\"lodash/merge\");\n/**\n * Represents the assessment that checks if the keyword is present in one of the subheadings.\n */\nclass SubHeadingsKeywordAssessment extends Assessment {\n    /**\n     * Sets the identifier and the config.\n     *\n     * @param {object} config The configuration to use.\n     *\n     * @returns {void}\n     */\n    constructor(config = {}) {\n        super();\n        let defaultConfig = {\n            scores: {\n                noMatches: 6,\n                oneMatch: 9,\n                multipleMatches: 9,\n            },\n        };\n        this.identifier = \"subheadingsKeyword\";\n        this._config = merge(defaultConfig, config);\n    }\n    /**\n     * Runs the match keyword in subheadings module, based on this returns an assessment result with score.\n     *\n     * @param {Paper} paper The paper to use for the assessment.\n     * @param {Researcher} researcher The researcher used for calling research.\n     * @param {object} i18n The object used for translations.\n     *\n     * @returns {AssessmentResult} The assessment result.\n     */\n    getResult(paper, researcher, i18n) {\n        let subHeadings = researcher.getResearch(\"matchKeywordInSubheadings\");\n        let assessmentResult = new AssessmentResult();\n        let score = this.calculateScore(subHeadings);\n        assessmentResult.setScore(score);\n        assessmentResult.setText(this.translateScore(score, subHeadings, i18n));\n        return assessmentResult;\n    }\n    /**\n     * Checks whether the paper has a text and a keyword.\n     *\n     * @param {Paper} paper The paper to use for the assessment.\n     *\n     * @returns {boolean} True when there is text and a keyword.\n     */\n    isApplicable(paper) {\n        return paper.hasText() && paper.hasKeyword();\n    }\n    /**\n     * Returns the score for the subheadings.\n     *\n     * @param {object} subHeadings The object with all subHeadings matches.\n     *\n     * @returns {number|null} The calculated score.\n     */\n    calculateScore(subHeadings) {\n        if (subHeadings.matches === 0) {\n            return this._config.scores.noMatches;\n        }\n        if (subHeadings.matches === 1) {\n            return this._config.scores.oneMatch;\n        }\n        if (subHeadings.matches > 1) {\n            return this._config.scores.multipleMatches;\n        }\n        return null;\n    }\n    /**\n     * Translates the score to a message the user can understand.\n     *\n     * @param {number} score The score for this assessment.\n     * @param {object} subHeadings The object with all subHeadings matches.\n     * @param {object} i18n The object used for translations.\n     *\n     * @returns {string} The translated string.\n     */\n    translateScore(score, subHeadings, i18n) {\n        if (score === this._config.scores.multipleMatches || score === this._config.scores.oneMatch) {\n            return i18n.sprintf(i18n.dgettext(\"js-text-analysis\", \"The focus keyword appears in %2$d (out of %1$d) subheadings in your copy.\"), subHeadings.count, subHeadings.matches);\n        }\n        if (score === this._config.scores.noMatches) {\n            return i18n.dgettext(\"js-text-analysis\", \"You have not used the focus keyword in any subheading (such as an H2) in your copy.\");\n        }\n        return \"\";\n    }\n}\nmodule.exports = SubHeadingsKeywordAssessment;\n//# sourceMappingURL=subheadingsKeywordAssessment.js.map"]}