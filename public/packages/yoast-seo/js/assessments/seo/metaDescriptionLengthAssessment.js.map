{"version":3,"sources":["../../../../js/assessments/seo/metaDescriptionLengthAssessment.js"],"names":["AssessmentResult","require","Assessment","merge","MetaDescriptionLengthAssessment","config","defaultConfig","recommendedMaximumLength","maximumLength","scores","noMetaDescription","tooLong","tooShort","correctLength","identifier","_config","paper","researcher","i18n","descriptionLength","getResearch","assessmentResult","setScore","calculateScore","setText","translateScore","dgettext","sprintf","module","exports"],"mappings":"AAAA;;;;;;;;;;AACA,IAAIA,mBAAmBC,QAAQ,kCAAR,CAAvB;AACA,IAAIC,aAAaD,QAAQ,qBAAR,CAAjB;AACA,IAAIE,QAAQF,QAAQ,cAAR,CAAZ;AACA;;;;IAGMG,+B;;;AACF;;;;;;;AAOA,+CAAyB;AAAA,YAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AAAA;;AAErB,YAAIC,gBAAgB;AAChBC,sCAA0B,GADV;AAEhBC,2BAAe,GAFC;AAGhBC,oBAAQ;AACJC,mCAAmB,CADf;AAEJC,yBAAS,CAFL;AAGJC,0BAAU,CAHN;AAIJC,+BAAe;AAJX;AAHQ,SAApB;AAUA,cAAKC,UAAL,GAAkB,uBAAlB;AACA,cAAKC,OAAL,GAAeZ,MAAMG,aAAN,EAAqBD,MAArB,CAAf;AAbqB;AAcxB;AACD;;;;;;;;;;;;;kCASUW,K,EAAOC,U,EAAYC,I,EAAM;AAC/B,gBAAIC,oBAAoBF,WAAWG,WAAX,CAAuB,uBAAvB,CAAxB;AACA,gBAAIC,mBAAmB,IAAIrB,gBAAJ,EAAvB;AACAqB,6BAAiBC,QAAjB,CAA0B,KAAKC,cAAL,CAAoBJ,iBAApB,CAA1B;AACAE,6BAAiBG,OAAjB,CAAyB,KAAKC,cAAL,CAAoBN,iBAApB,EAAuCD,IAAvC,CAAzB;AACA,mBAAOG,gBAAP;AACH;AACD;;;;;;;;;;uCAOeF,iB,EAAmB;AAC9B,gBAAIA,sBAAsB,CAA1B,EAA6B;AACzB,uBAAO,KAAKJ,OAAL,CAAaN,MAAb,CAAoBC,iBAA3B;AACH;AACD,gBAAIS,qBAAqB,KAAKJ,OAAL,CAAaR,wBAAtC,EAAgE;AAC5D,uBAAO,KAAKQ,OAAL,CAAaN,MAAb,CAAoBG,QAA3B;AACH;AACD,gBAAIO,oBAAoB,KAAKJ,OAAL,CAAaP,aAArC,EAAoD;AAChD,uBAAO,KAAKO,OAAL,CAAaN,MAAb,CAAoBE,OAA3B;AACH;AACD,gBAAIQ,qBAAqB,KAAKJ,OAAL,CAAaR,wBAAlC,IAA8DY,qBAAqB,KAAKJ,OAAL,CAAaP,aAApG,EAAmH;AAC/G,uBAAO,KAAKO,OAAL,CAAaN,MAAb,CAAoBI,aAA3B;AACH;AACD,mBAAO,CAAP;AACH;AACD;;;;;;;;;;;uCAQeM,iB,EAAmBD,I,EAAM;AACpC,gBAAIC,sBAAsB,CAA1B,EAA6B;AACzB,uBAAOD,KAAKQ,QAAL,CAAc,kBAAd,EAAkC,6CACrC,yDADG,CAAP;AAEH;AACD,gBAAIP,qBAAqB,KAAKJ,OAAL,CAAaR,wBAAtC,EAAgE;AAC5D,uBAAOW,KAAKS,OAAL,CAAaT,KAAKQ,QAAL,CAAc,kBAAd,EAAkC,yDAClD,+CADgB,CAAb,EAC+C,KAAKX,OAAL,CAAaR,wBAD5D,EACsF,KAAKQ,OAAL,CAAaP,aADnG,CAAP;AAEH;AACD,gBAAIW,oBAAoB,KAAKJ,OAAL,CAAaP,aAArC,EAAoD;AAChD,uBAAOU,KAAKS,OAAL,CAAaT,KAAKQ,QAAL,CAAc,kBAAd,EAAkC,mDAClD,yEADgB,CAAb,EACyE,KAAKX,OAAL,CAAaP,aADtF,CAAP;AAEH;AACD,gBAAIW,qBAAqB,KAAKJ,OAAL,CAAaR,wBAAlC,IAA8DY,qBAAqB,KAAKJ,OAAL,CAAaP,aAApG,EAAmH;AAC/G,uBAAOU,KAAKQ,QAAL,CAAc,kBAAd,EAAkC,yCAAlC,CAAP;AACH;AACJ;;;;EArFyCxB,U;;AAuF9C0B,OAAOC,OAAP,GAAiBzB,+BAAjB;AACA","file":"metaDescriptionLengthAssessment.js","sourcesContent":["\"use strict\";\nlet AssessmentResult = require(\"../../values/AssessmentResult.js\");\nlet Assessment = require(\"../../assessment.js\");\nlet merge = require(\"lodash/merge\");\n/**\n * Assessment for calculating the length of the meta description.\n */\nclass MetaDescriptionLengthAssessment extends Assessment {\n    /**\n     * Sets the identifier and the config.\n     *\n     * @param {object} config The configuration to use.\n     *\n     * @returns {void}\n     */\n    constructor(config = {}) {\n        super();\n        let defaultConfig = {\n            recommendedMaximumLength: 120,\n            maximumLength: 320,\n            scores: {\n                noMetaDescription: 1,\n                tooLong: 6,\n                tooShort: 6,\n                correctLength: 9,\n            },\n        };\n        this.identifier = \"metaDescriptionLength\";\n        this._config = merge(defaultConfig, config);\n    }\n    /**\n     * Runs the metaDescriptionLength module, based on this returns an assessment result with score.\n     *\n     * @param {Paper} paper The paper to use for the assessment.\n     * @param {Researcher} researcher The researcher used for calling research.\n     * @param {object} i18n The object used for translations\n     *\n     * @returns {AssessmentResult} The assessment result.\n     */\n    getResult(paper, researcher, i18n) {\n        let descriptionLength = researcher.getResearch(\"metaDescriptionLength\");\n        let assessmentResult = new AssessmentResult();\n        assessmentResult.setScore(this.calculateScore(descriptionLength));\n        assessmentResult.setText(this.translateScore(descriptionLength, i18n));\n        return assessmentResult;\n    }\n    /**\n     * Returns the score for the descriptionLength.\n     *\n     * @param {number} descriptionLength The length of the metadescription.\n     *\n     * @returns {number} The calculated score.\n     */\n    calculateScore(descriptionLength) {\n        if (descriptionLength === 0) {\n            return this._config.scores.noMetaDescription;\n        }\n        if (descriptionLength <= this._config.recommendedMaximumLength) {\n            return this._config.scores.tooShort;\n        }\n        if (descriptionLength > this._config.maximumLength) {\n            return this._config.scores.tooLong;\n        }\n        if (descriptionLength >= this._config.recommendedMaximumLength && descriptionLength <= this._config.maximumLength) {\n            return this._config.scores.correctLength;\n        }\n        return 0;\n    }\n    /**\n     * Translates the descriptionLength to a message the user can understand.\n     *\n     * @param {number} descriptionLength The length of the metadescription.\n     * @param {object} i18n The object used for translations.\n     *\n     * @returns {string} The translated string.\n     */\n    translateScore(descriptionLength, i18n) {\n        if (descriptionLength === 0) {\n            return i18n.dgettext(\"js-text-analysis\", \"No meta description has been specified. \" +\n                \"Search engines will display copy from the page instead.\");\n        }\n        if (descriptionLength <= this._config.recommendedMaximumLength) {\n            return i18n.sprintf(i18n.dgettext(\"js-text-analysis\", \"The meta description is under %1$d characters long. \" +\n                \"However, up to %2$d characters are available.\"), this._config.recommendedMaximumLength, this._config.maximumLength);\n        }\n        if (descriptionLength > this._config.maximumLength) {\n            return i18n.sprintf(i18n.dgettext(\"js-text-analysis\", \"The meta description is over %1$d characters. \" +\n                \"Reducing the length will ensure the entire description will be visible.\"), this._config.maximumLength);\n        }\n        if (descriptionLength >= this._config.recommendedMaximumLength && descriptionLength <= this._config.maximumLength) {\n            return i18n.dgettext(\"js-text-analysis\", \"The meta description has a nice length.\");\n        }\n    }\n}\nmodule.exports = MetaDescriptionLengthAssessment;\n//# sourceMappingURL=metaDescriptionLengthAssessment.js.map"]}