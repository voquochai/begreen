{"version":3,"sources":["../../../../js/assessments/seo/titleKeywordAssessment.js"],"names":["AssessmentResult","require","escape","titleHasKeywordAssessment","paper","researcher","i18n","keywordMatches","getResearch","score","text","matches","sprintf","dgettext","getKeyword","position","assessmentResult","setScore","setText","module","exports","identifier","getResult","isApplicable","hasKeyword"],"mappings":"AAAA;;AACA,IAAIA,mBAAmBC,QAAQ,kCAAR,CAAvB;AACA,IAAIC,SAASD,QAAQ,eAAR,CAAb;AACA;;;;;;;AAOA,IAAIE,4BAA4B,SAA5BA,yBAA4B,CAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,IAA7B,EAAmC;AAC/D,QAAIC,iBAAiBF,WAAWG,WAAX,CAAuB,wBAAvB,CAArB;AACA,QAAIC,KAAJ,EAAWC,IAAX;AACA,QAAIH,eAAeI,OAAf,KAA2B,CAA/B,EAAkC;AAC9BF,gBAAQ,CAAR;AACAC,eAAOJ,KAAKM,OAAL,CAAaN,KAAKO,QAAL,CAAc,kBAAd,EAAkC,mCAClD,8BADgB,CAAb,EAC8BX,OAAOE,MAAMU,UAAN,EAAP,CAD9B,CAAP;AAEH;AACD,QAAIP,eAAeI,OAAf,GAAyB,CAAzB,IAA8BJ,eAAeQ,QAAf,KAA4B,CAA9D,EAAiE;AAC7DN,gBAAQ,CAAR;AACAC,eAAOJ,KAAKO,QAAL,CAAc,kBAAd,EAAkC,oFACrC,sBADG,CAAP;AAEH;AACD,QAAIN,eAAeI,OAAf,GAAyB,CAAzB,IAA8BJ,eAAeQ,QAAf,GAA0B,CAA5D,EAA+D;AAC3DN,gBAAQ,CAAR;AACAC,eAAOJ,KAAKO,QAAL,CAAc,kBAAd,EAAkC,uFACrC,oCADG,CAAP;AAEH;AACD,QAAIG,mBAAmB,IAAIhB,gBAAJ,EAAvB;AACAgB,qBAAiBC,QAAjB,CAA0BR,KAA1B;AACAO,qBAAiBE,OAAjB,CAAyBR,IAAzB;AACA,WAAOM,gBAAP;AACH,CAtBD;AAuBAG,OAAOC,OAAP,GAAiB;AACbC,gBAAY,cADC;AAEbC,eAAWnB,yBAFE;AAGboB,kBAAc,sBAAUnB,KAAV,EAAiB;AAC3B,eAAOA,MAAMoB,UAAN,EAAP;AACH;AALY,CAAjB;AAOA","file":"titleKeywordAssessment.js","sourcesContent":["\"use strict\";\nvar AssessmentResult = require(\"../../values/AssessmentResult.js\");\nvar escape = require(\"lodash/escape\");\n/**\n * Executes the pagetitle keyword assessment and returns an assessment result.\n * @param {Paper} paper The Paper object to assess.\n * @param {Researcher} researcher The Researcher object containing all available researches.\n * @param {object} i18n The locale object.\n * @returns {AssessmentResult} The result of the assessment with text and score\n */\nvar titleHasKeywordAssessment = function (paper, researcher, i18n) {\n    var keywordMatches = researcher.getResearch(\"findKeywordInPageTitle\");\n    var score, text;\n    if (keywordMatches.matches === 0) {\n        score = 2;\n        text = i18n.sprintf(i18n.dgettext(\"js-text-analysis\", \"The focus keyword '%1$s' does \" +\n            \"not appear in the SEO title.\"), escape(paper.getKeyword()));\n    }\n    if (keywordMatches.matches > 0 && keywordMatches.position === 0) {\n        score = 9;\n        text = i18n.dgettext(\"js-text-analysis\", \"The SEO title contains the focus keyword, at the beginning which is considered \" +\n            \"to improve rankings.\");\n    }\n    if (keywordMatches.matches > 0 && keywordMatches.position > 0) {\n        score = 6;\n        text = i18n.dgettext(\"js-text-analysis\", \"The SEO title contains the focus keyword, but it does not appear at the beginning;\" +\n            \" try and move it to the beginning.\");\n    }\n    var assessmentResult = new AssessmentResult();\n    assessmentResult.setScore(score);\n    assessmentResult.setText(text);\n    return assessmentResult;\n};\nmodule.exports = {\n    identifier: \"titleKeyword\",\n    getResult: titleHasKeywordAssessment,\n    isApplicable: function (paper) {\n        return paper.hasKeyword();\n    },\n};\n//# sourceMappingURL=titleKeywordAssessment.js.map"]}