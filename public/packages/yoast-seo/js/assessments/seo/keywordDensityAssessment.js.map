{"version":3,"sources":["../../../../js/assessments/seo/keywordDensityAssessment.js"],"names":["AssessmentResult","require","matchWords","countWords","formatNumber","inRange","inRangeEndInclusive","inRangeStartInclusive","inRangeStartEndInclusive","calculateKeywordDensityResult","keywordDensity","i18n","keywordCount","score","text","max","roundedKeywordDensity","keywordDensityPercentage","dgettext","sprintf","keywordDensityAssessment","paper","researcher","getResearch","getText","getKeyword","getLocale","keywordDensityResult","assessmentResult","setScore","setText","module","exports","identifier","getResult","isApplicable","hasText","hasKeyword"],"mappings":"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","file":"keywordDensityAssessment.js","sourcesContent":["\"use strict\";\nvar AssessmentResult = require(\"../../values/AssessmentResult.js\");\nvar matchWords = require(\"../../stringProcessing/matchTextWithWord.js\");\nvar countWords = require(\"../../stringProcessing/countWords.js\");\nvar formatNumber = require(\"../../helpers/formatNumber.js\");\nvar inRange = require(\"../../helpers/inRange.js\");\nvar inRangeEndInclusive = inRange.inRangeEndInclusive;\nvar inRangeStartInclusive = inRange.inRangeStartInclusive;\nvar inRangeStartEndInclusive = inRange.inRangeStartEndInclusive;\n/**\n * Returns the scores and text for keyword density\n *\n * @param {string} keywordDensity The keyword density\n * @param {object} i18n The i18n object used for translations\n * @param {number} keywordCount The number of times the keyword has been found in the text.\n * @returns {{score: number, text: *}} The assessment result\n */\nvar calculateKeywordDensityResult = function (keywordDensity, i18n, keywordCount) {\n    var score, text, max;\n    var roundedKeywordDensity = formatNumber(keywordDensity);\n    var keywordDensityPercentage = roundedKeywordDensity + \"%\";\n    if (roundedKeywordDensity > 3.5) {\n        score = -50;\n        /* Translators: %1$s expands to the keyword density percentage, %2$d expands to the keyword count,\n        %3$s expands to the maximum keyword density percentage. */\n        text = i18n.dgettext(\"js-text-analysis\", \"The keyword density is %1$s,\" +\n            \" which is way over the advised %3$s maximum;\" +\n            \" the focus keyword was found %2$d times.\");\n        max = \"2.5%\";\n        text = i18n.sprintf(text, keywordDensityPercentage, keywordCount, max);\n    }\n    if (inRangeEndInclusive(roundedKeywordDensity, 2.5, 3.5)) {\n        score = -10;\n        /* Translators: %1$s expands to the keyword density percentage, %2$d expands to the keyword count,\n        %3$s expands to the maximum keyword density percentage. */\n        text = i18n.dgettext(\"js-text-analysis\", \"The keyword density is %1$s,\" +\n            \" which is over the advised %3$s maximum;\" +\n            \" the focus keyword was found %2$d times.\");\n        max = \"2.5%\";\n        text = i18n.sprintf(text, keywordDensityPercentage, keywordCount, max);\n    }\n    if (inRangeStartEndInclusive(roundedKeywordDensity, 0.5, 2.5)) {\n        score = 9;\n        /* Translators: %1$s expands to the keyword density percentage, %2$d expands to the keyword count. */\n        text = i18n.dgettext(\"js-text-analysis\", \"The keyword density is %1$s, which is great;\" +\n            \" the focus keyword was found %2$d times.\");\n        text = i18n.sprintf(text, keywordDensityPercentage, keywordCount);\n    }\n    if (inRangeStartInclusive(roundedKeywordDensity, 0, 0.5)) {\n        score = 4;\n        /* Translators: %1$s expands to the keyword density percentage, %2$d expands to the keyword count. */\n        text = i18n.dgettext(\"js-text-analysis\", \"The keyword density is %1$s, which is too low;\" +\n            \" the focus keyword was found %2$d times.\");\n        text = i18n.sprintf(text, keywordDensityPercentage, keywordCount);\n    }\n    return {\n        score: score,\n        text: text,\n    };\n};\n/**\n * Runs the getkeywordDensity module, based on this returns an assessment result with score.\n *\n * @param {object} paper The paper to use for the assessment.\n * @param {object} researcher The researcher used for calling research.\n * @param {object} i18n The object used for translations\n * @returns {object} the Assessmentresult\n */\nvar keywordDensityAssessment = function (paper, researcher, i18n) {\n    var keywordDensity = researcher.getResearch(\"getKeywordDensity\");\n    var keywordCount = matchWords(paper.getText(), paper.getKeyword(), paper.getLocale());\n    var keywordDensityResult = calculateKeywordDensityResult(keywordDensity, i18n, keywordCount);\n    var assessmentResult = new AssessmentResult();\n    assessmentResult.setScore(keywordDensityResult.score);\n    assessmentResult.setText(keywordDensityResult.text);\n    return assessmentResult;\n};\nmodule.exports = {\n    identifier: \"keywordDensity\",\n    getResult: keywordDensityAssessment,\n    isApplicable: function (paper) {\n        return paper.hasText() && paper.hasKeyword() && countWords(paper.getText()) >= 100;\n    },\n};\n//# sourceMappingURL=keywordDensityAssessment.js.map"]}