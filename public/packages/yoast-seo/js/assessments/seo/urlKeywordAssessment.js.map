{"version":3,"sources":["../../../../js/assessments/seo/urlKeywordAssessment.js"],"names":["AssessmentResult","require","Assessment","merge","UrlKeywordAssessment","config","defaultConfig","scores","noKeywordInUrl","identifier","_config","paper","researcher","i18n","totalKeywords","getResearch","assessmentResult","setScore","calculateScore","setText","translateScore","hasKeyword","hasUrl","dgettext","module","exports"],"mappings":"AAAA;;;;;;;;;;AACA,IAAIA,mBAAmBC,QAAQ,kCAAR,CAAvB;AACA,IAAIC,aAAaD,QAAQ,qBAAR,CAAjB;AACA,IAAIE,QAAQF,QAAQ,cAAR,CAAZ;AACA;;;;IAGMG,oB;;;AACF;;;;;;;AAOA,oCAAyB;AAAA,YAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AAAA;;AAErB,YAAIC,gBAAgB;AAChBC,oBAAQ;AACJC,gCAAgB;AADZ;AADQ,SAApB;AAKA,cAAKC,UAAL,GAAkB,YAAlB;AACA,cAAKC,OAAL,GAAeP,MAAMG,aAAN,EAAqBD,MAArB,CAAf;AARqB;AASxB;AACD;;;;;;;;;;;;;kCASUM,K,EAAOC,U,EAAYC,I,EAAM;AAC/B,gBAAIC,gBAAgBF,WAAWG,WAAX,CAAuB,mBAAvB,CAApB;AACA,gBAAIC,mBAAmB,IAAIhB,gBAAJ,EAAvB;AACAgB,6BAAiBC,QAAjB,CAA0B,KAAKC,cAAL,CAAoBJ,aAApB,CAA1B;AACAE,6BAAiBG,OAAjB,CAAyB,KAAKC,cAAL,CAAoBN,aAApB,EAAmCD,IAAnC,CAAzB;AACA,mBAAOG,gBAAP;AACH;AACD;;;;;;;;;;qCAOaL,K,EAAO;AAChB,mBAAOA,MAAMU,UAAN,MAAsBV,MAAMW,MAAN,EAA7B;AACH;AACD;;;;;;;;;;uCAOeR,a,EAAe;AAC1B,gBAAIA,kBAAkB,CAAtB,EAAyB;AACrB,uBAAO,KAAKJ,OAAL,CAAaH,MAAb,CAAoBC,cAA3B;AACH;AACD,mBAAO,CAAP;AACH;AACD;;;;;;;;;;;uCAQeM,a,EAAeD,I,EAAM;AAChC,gBAAIC,kBAAkB,CAAtB,EAAyB;AACrB,uBAAOD,KAAKU,QAAL,CAAc,kBAAd,EAAkC,iEACrC,4FADG,CAAP;AAEH;AACD,mBAAOV,KAAKU,QAAL,CAAc,kBAAd,EAAkC,qDAAlC,CAAP;AACH;;;;EAvE8BrB,U;;AAyEnCsB,OAAOC,OAAP,GAAiBrB,oBAAjB;AACA","file":"urlKeywordAssessment.js","sourcesContent":["\"use strict\";\nlet AssessmentResult = require(\"../../values/AssessmentResult.js\");\nlet Assessment = require(\"../../assessment.js\");\nlet merge = require(\"lodash/merge\");\n/**\n * Represents the URL keyword assessments. This assessments will check if the keyword is present in the url.\n */\nclass UrlKeywordAssessment extends Assessment {\n    /**\n     * Sets the identifier and the config.\n     *\n     * @param {object} config The configuration to use.\n     *\n     * @returns {void}\n     */\n    constructor(config = {}) {\n        super();\n        let defaultConfig = {\n            scores: {\n                noKeywordInUrl: 6,\n            },\n        };\n        this.identifier = \"urlKeyword\";\n        this._config = merge(defaultConfig, config);\n    }\n    /**\n     * Executes the Assessment and returns a result.\n     *\n     * @param {Paper} paper The Paper object to assess.\n     * @param {Researcher} researcher The Researcher object containing all available researches.\n     * @param {object} i18n The locale object.\n     *\n     * @returns {AssessmentResult} The result of the assessment, containing both a score and a descriptive text.\n     */\n    getResult(paper, researcher, i18n) {\n        let totalKeywords = researcher.getResearch(\"keywordCountInUrl\");\n        let assessmentResult = new AssessmentResult();\n        assessmentResult.setScore(this.calculateScore(totalKeywords));\n        assessmentResult.setText(this.translateScore(totalKeywords, i18n));\n        return assessmentResult;\n    }\n    /**\n     * Checks whether the paper has a keyword and a url.\n     *\n     * @param {Paper} paper The paper to use for the assessment.\n     *\n     * @returns {boolean} True when there is a keyword and an url.\n     */\n    isApplicable(paper) {\n        return paper.hasKeyword() && paper.hasUrl();\n    }\n    /**\n     * Calculates the score based on whether or not there's a keyword in the url.\n     *\n     * @param {number} totalKeywords The amount of keywords to be checked against.\n     *\n     * @returns {number} The calculated score.\n     */\n    calculateScore(totalKeywords) {\n        if (totalKeywords === 0) {\n            return this._config.scores.noKeywordInUrl;\n        }\n        return 9;\n    }\n    /**\n     * Translates the score to a message the user can understand.\n     *\n     * @param {number} totalKeywords The amount of keywords to be checked against.\n     * @param {object} i18n The object used for translations.\n     *\n     * @returns {string} The translated string.\n     */\n    translateScore(totalKeywords, i18n) {\n        if (totalKeywords === 0) {\n            return i18n.dgettext(\"js-text-analysis\", \"The focus keyword does not appear in the URL for this page. \" +\n                \"If you decide to rename the URL be sure to check the old URL 301 redirects to the new one!\");\n        }\n        return i18n.dgettext(\"js-text-analysis\", \"The focus keyword appears in the URL for this page.\");\n    }\n}\nmodule.exports = UrlKeywordAssessment;\n//# sourceMappingURL=urlKeywordAssessment.js.map"]}