{"version":3,"sources":["../../../../js/assessments/seo/metaDescriptionKeywordAssessment.js"],"names":["AssessmentResult","require","calculateKeywordMatchesResult","keywordMatches","i18n","score","text","dgettext","metaDescriptionHasKeywordAssessment","paper","researcher","getResearch","descriptionLengthResult","assessmentResult","setScore","setText","module","exports","identifier","getResult","isApplicable","hasKeyword"],"mappings":"AAAA;;AACA,IAAIA,mBAAmBC,QAAQ,kCAAR,CAAvB;AACA;;;;;;AAMA,IAAIC,gCAAgC,SAAhCA,6BAAgC,CAAUC,cAAV,EAA0BC,IAA1B,EAAgC;AAChE,QAAID,iBAAiB,CAArB,EAAwB;AACpB,eAAO;AACHE,mBAAO,CADJ;AAEHC,kBAAMF,KAAKG,QAAL,CAAc,kBAAd,EAAkC,kDAAlC;AAFH,SAAP;AAIH;AACD,QAAIJ,mBAAmB,CAAvB,EAA0B;AACtB,eAAO;AACHE,mBAAO,CADJ;AAEHC,kBAAMF,KAAKG,QAAL,CAAc,kBAAd,EAAkC,mFAAlC;AAFH,SAAP;AAIH;AACD,WAAO,EAAP;AACH,CAdD;AAeA;;;;;;;;AAQA,IAAIC,sCAAsC,SAAtCA,mCAAsC,CAAUC,KAAV,EAAiBC,UAAjB,EAA6BN,IAA7B,EAAmC;AACzE,QAAID,iBAAiBO,WAAWC,WAAX,CAAuB,wBAAvB,CAArB;AACA,QAAIC,0BAA0BV,8BAA8BC,cAA9B,EAA8CC,IAA9C,CAA9B;AACA,QAAIS,mBAAmB,IAAIb,gBAAJ,EAAvB;AACAa,qBAAiBC,QAAjB,CAA0BF,wBAAwBP,KAAlD;AACAQ,qBAAiBE,OAAjB,CAAyBH,wBAAwBN,IAAjD;AACA,WAAOO,gBAAP;AACH,CAPD;AAQAG,OAAOC,OAAP,GAAiB;AACbC,gBAAY,wBADC;AAEbC,eAAWX,mCAFE;AAGbY,kBAAc,sBAAUX,KAAV,EAAiB;AAC3B,eAAOA,MAAMY,UAAN,EAAP;AACH;AALY,CAAjB;AAOA","file":"metaDescriptionKeywordAssessment.js","sourcesContent":["\"use strict\";\nvar AssessmentResult = require(\"../../values/AssessmentResult.js\");\n/**\n * Returns the score and text for the description keyword match.\n * @param {number} keywordMatches The number of keyword matches in the description.\n * @param {object} i18n The i18n object used for translations.\n * @returns {Object} An object with values for the assessment result.\n */\nvar calculateKeywordMatchesResult = function (keywordMatches, i18n) {\n    if (keywordMatches > 0) {\n        return {\n            score: 9,\n            text: i18n.dgettext(\"js-text-analysis\", \"The meta description contains the focus keyword.\"),\n        };\n    }\n    if (keywordMatches === 0) {\n        return {\n            score: 3,\n            text: i18n.dgettext(\"js-text-analysis\", \"A meta description has been specified, but it does not contain the focus keyword.\"),\n        };\n    }\n    return {};\n};\n/**\n * Runs the metaDescription keyword module, based on this returns an assessment result with score.\n *\n * @param {object} paper The paper to use for the assessment.\n * @param {object} researcher The researcher used for calling research.\n * @param {object} i18n The object used for translations\n * @returns {object} the Assessmentresult\n */\nvar metaDescriptionHasKeywordAssessment = function (paper, researcher, i18n) {\n    var keywordMatches = researcher.getResearch(\"metaDescriptionKeyword\");\n    var descriptionLengthResult = calculateKeywordMatchesResult(keywordMatches, i18n);\n    var assessmentResult = new AssessmentResult();\n    assessmentResult.setScore(descriptionLengthResult.score);\n    assessmentResult.setText(descriptionLengthResult.text);\n    return assessmentResult;\n};\nmodule.exports = {\n    identifier: \"metaDescriptionKeyword\",\n    getResult: metaDescriptionHasKeywordAssessment,\n    isApplicable: function (paper) {\n        return paper.hasKeyword();\n    },\n};\n//# sourceMappingURL=metaDescriptionKeywordAssessment.js.map"]}