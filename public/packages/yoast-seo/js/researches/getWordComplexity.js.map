{"version":3,"sources":["../../../js/researches/getWordComplexity.js"],"names":["getWords","require","countSyllables","getSentences","map","forEach","getWordComplexityForSentence","sentence","words","results","word","i","push","wordIndex","complexity","module","exports","paper","sentences","getText"],"mappings":"AAAA;;AACA,IAAIA,WAAWC,QAAQ,iCAAR,CAAf;AACA,IAAIC,iBAAiBD,QAAQ,wCAAR,CAArB;AACA,IAAIE,eAAeF,QAAQ,qCAAR,CAAnB;AACA,IAAIG,MAAMH,QAAQ,YAAR,CAAV;AACA,IAAII,UAAUJ,QAAQ,gBAAR,CAAd;AACA;;;;;AAKA,IAAIK,+BAA+B,SAA/BA,4BAA+B,CAAUC,QAAV,EAAoB;AACnD,QAAIC,QAAQR,SAASO,QAAT,CAAZ;AACA,QAAIE,UAAU,EAAd;AACAJ,YAAQG,KAAR,EAAe,UAAUE,IAAV,EAAgBC,CAAhB,EAAmB;AAC9BF,gBAAQG,IAAR,CAAa;AACTF,kBAAMA,IADG;AAETG,uBAAWF,CAFF;AAGTG,wBAAYZ,eAAeQ,IAAf;AAHH,SAAb;AAKH,KAND;AAOA,WAAOD,OAAP;AACH,CAXD;AAYA;;;;;AAKAM,OAAOC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAC9B,QAAIC,YAAYf,aAAac,MAAME,OAAN,EAAb,CAAhB;AACA,WAAOf,IAAIc,SAAJ,EAAe,UAAUX,QAAV,EAAoB;AACtC,eAAO;AACHA,sBAAUA,QADP;AAEHC,mBAAOF,6BAA6BC,QAA7B;AAFJ,SAAP;AAIH,KALM,CAAP;AAMH,CARD;AASA","file":"getWordComplexity.js","sourcesContent":["\"use strict\";\nvar getWords = require(\"../stringProcessing/getWords.js\");\nvar countSyllables = require(\"../stringProcessing/syllables/count.js\");\nvar getSentences = require(\"../stringProcessing/getSentences.js\");\nvar map = require(\"lodash/map\");\nvar forEach = require(\"lodash/forEach\");\n/**\n * Gets the complexity per word, along with the index for the sentence.\n * @param {string} sentence The sentence to get wordComplexity from.\n * @returns {Array} A list with words, the index and the complexity per word.\n */\nvar getWordComplexityForSentence = function (sentence) {\n    var words = getWords(sentence);\n    var results = [];\n    forEach(words, function (word, i) {\n        results.push({\n            word: word,\n            wordIndex: i,\n            complexity: countSyllables(word),\n        });\n    });\n    return results;\n};\n/**\n * Calculates the complexity of words in a text, returns each words with their complexity.\n * @param {Paper} paper The Paper object to get the text from.\n * @returns {Object} The words found in the text with the number of syllables.\n */\nmodule.exports = function (paper) {\n    var sentences = getSentences(paper.getText());\n    return map(sentences, function (sentence) {\n        return {\n            sentence: sentence,\n            words: getWordComplexityForSentence(sentence),\n        };\n    });\n};\n//# sourceMappingURL=getWordComplexity.js.map"]}