{"version":3,"sources":["../../../js/researches/stopWordsInText.js"],"names":["stopwords","require","toRegex","module","exports","text","i","matches","length","match","push"],"mappings":"AAAA;;AACA,IAAIA,YAAYC,QAAQ,wBAAR,GAAhB;AACA,IAAIC,UAAUD,QAAQ,wCAAR,CAAd;AACA;;;;;;AAMAE,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7B,QAAIC,CAAJ;AAAA,QAAOC,UAAU,EAAjB;AACA,SAAKD,IAAI,CAAT,EAAYA,IAAIN,UAAUQ,MAA1B,EAAkCF,GAAlC,EAAuC;AACnC,YAAID,KAAKI,KAAL,CAAWP,QAAQF,UAAUM,CAAV,CAAR,CAAX,MAAsC,IAA1C,EAAgD;AAC5CC,oBAAQG,IAAR,CAAaV,UAAUM,CAAV,CAAb;AACH;AACJ;AACD,WAAOC,OAAP;AACH,CARD;AASA","file":"stopWordsInText.js","sourcesContent":["\"use strict\";\nvar stopwords = require(\"../config/stopwords.js\")();\nvar toRegex = require(\"../stringProcessing/createWordRegex.js\");\n/**\n * Checks a text to see if there are any stopwords, that are defined in the stopwords config.\n *\n * @param {string} text The input text to match stopwords.\n * @returns {Array} An array with all stopwords found in the text.\n */\nmodule.exports = function (text) {\n    var i, matches = [];\n    for (i = 0; i < stopwords.length; i++) {\n        if (text.match(toRegex(stopwords[i])) !== null) {\n            matches.push(stopwords[i]);\n        }\n    }\n    return matches;\n};\n//# sourceMappingURL=stopWordsInText.js.map"]}