{"version":3,"sources":["../../../../../js/researches/german/passiveVoice/getParticiples.js"],"names":["getWords","require","regexFunction","verbsBeginningWithErVerEntBeZerHerUber","verbsBeginningWithGe","verbsWithGeInMiddle","verbsWithErVerEntBeZerHerUberInMiddle","verbsEndingWithIert","irregularParticiples","GermanParticiple","forEach","includes","module","exports","sentencePartText","auxiliaries","words","foundParticiples","word","length","push","type"],"mappings":"AAAA;;AACA,IAAIA,WAAWC,QAAQ,uCAAR,CAAf;AACA,IAAIC,gBAAgBD,QAAQ,YAAR,GAApB;AACA,IAAIE,yCAAyCD,cAAcC,sCAA3D;AACA,IAAIC,uBAAuBF,cAAcE,oBAAzC;AACA,IAAIC,sBAAsBH,cAAcG,mBAAxC;AACA,IAAIC,wCAAwCJ,cAAcI,qCAA1D;AACA,IAAIC,sBAAsBL,cAAcK,mBAAxC;AACA,IAAIC,uBAAuBP,QAAQ,iBAAR,GAA3B;AACA,IAAIQ,mBAAmBR,QAAQ,uBAAR,CAAvB;AACA,IAAIS,UAAUT,QAAQ,gBAAR,CAAd;AACA,IAAIU,WAAWV,QAAQ,iBAAR,CAAf;AACA;;;;;;;AAOAW,OAAOC,OAAP,GAAiB,UAAUC,gBAAV,EAA4BC,WAA5B,EAAyC;AACtD,QAAIC,QAAQhB,SAASc,gBAAT,CAAZ;AACA,QAAIG,mBAAmB,EAAvB;AACAP,YAAQM,KAAR,EAAe,UAAUE,IAAV,EAAgB;AAC3B,YAAId,qBAAqBc,IAArB,EAA2BC,MAA3B,KAAsC,CAA1C,EAA6C;AACzCF,6BAAiBG,IAAjB,CAAsB,IAAIX,gBAAJ,CAAqBS,IAArB,EAA2BJ,gBAA3B,EAA6C,EAAEC,aAAaA,WAAf,EAA4BM,MAAM,iBAAlC,EAA7C,CAAtB;AACA;AACH;AACD,YAAIhB,oBAAoBa,IAApB,EAA0BC,MAA1B,KAAqC,CAAzC,EAA4C;AACxCF,6BAAiBG,IAAjB,CAAsB,IAAIX,gBAAJ,CAAqBS,IAArB,EAA2BJ,gBAA3B,EAA6C,EAAEC,aAAaA,WAAf,EAA4BM,MAAM,kBAAlC,EAA7C,CAAtB;AACA;AACH;AACD,YAAIlB,uCAAuCe,IAAvC,EAA6CC,MAA7C,KAAwD,CAA5D,EAA+D;AAC3DF,6BAAiBG,IAAjB,CAAsB,IAAIX,gBAAJ,CAAqBS,IAArB,EAA2BJ,gBAA3B,EAA6C,EAAEC,aAAaA,WAAf,EAA4BM,MAAM,oCAAlC,EAA7C,CAAtB;AACA;AACH;AACD,YAAIf,sCAAsCY,IAAtC,EAA4CC,MAA5C,KAAuD,CAA3D,EAA8D;AAC1DF,6BAAiBG,IAAjB,CAAsB,IAAIX,gBAAJ,CAAqBS,IAArB,EAA2BJ,gBAA3B,EAA6C,EAAEC,aAAaA,WAAf,EAA4BM,MAAM,qCAAlC,EAA7C,CAAtB;AACA;AACH;AACD,YAAId,oBAAoBW,IAApB,EAA0BC,MAA1B,KAAqC,CAAzC,EAA4C;AACxCF,6BAAiBG,IAAjB,CAAsB,IAAIX,gBAAJ,CAAqBS,IAArB,EAA2BJ,gBAA3B,EAA6C,EAAEC,aAAaA,WAAf,EAA4BM,MAAM,iBAAlC,EAA7C,CAAtB;AACH;AACD,YAAIV,SAASH,oBAAT,EAA+BU,IAA/B,CAAJ,EAA0C;AACtCD,6BAAiBG,IAAjB,CAAsB,IAAIX,gBAAJ,CAAqBS,IAArB,EAA2BJ,gBAA3B,EAA6C,EAAEC,aAAaA,WAAf,EAA4BM,MAAM,WAAlC,EAA7C,CAAtB;AACH;AACJ,KAvBD;AAwBA,WAAOJ,gBAAP;AACH,CA5BD;AA6BA","file":"getParticiples.js","sourcesContent":["\"use strict\";\nvar getWords = require(\"../../../stringProcessing/getWords.js\");\nvar regexFunction = require(\"./regex.js\")();\nvar verbsBeginningWithErVerEntBeZerHerUber = regexFunction.verbsBeginningWithErVerEntBeZerHerUber;\nvar verbsBeginningWithGe = regexFunction.verbsBeginningWithGe;\nvar verbsWithGeInMiddle = regexFunction.verbsWithGeInMiddle;\nvar verbsWithErVerEntBeZerHerUberInMiddle = regexFunction.verbsWithErVerEntBeZerHerUberInMiddle;\nvar verbsEndingWithIert = regexFunction.verbsEndingWithIert;\nvar irregularParticiples = require(\"./irregulars.js\")();\nvar GermanParticiple = require(\"./GermanParticiple.js\");\nvar forEach = require(\"lodash/forEach\");\nvar includes = require(\"lodash/includes\");\n/**\n * Creates GermanParticiple Objects for the participles found in a sentence.\n *\n * @param {string} sentencePartText The sentence to finds participles in.\n * @param {Array} auxiliaries The list of auxiliaries from the sentence part.\n * @returns {Array} The array with GermanParticiple Objects.\n */\nmodule.exports = function (sentencePartText, auxiliaries) {\n    var words = getWords(sentencePartText);\n    var foundParticiples = [];\n    forEach(words, function (word) {\n        if (verbsBeginningWithGe(word).length !== 0) {\n            foundParticiples.push(new GermanParticiple(word, sentencePartText, { auxiliaries: auxiliaries, type: \"ge at beginning\" }));\n            return;\n        }\n        if (verbsWithGeInMiddle(word).length !== 0) {\n            foundParticiples.push(new GermanParticiple(word, sentencePartText, { auxiliaries: auxiliaries, type: \"ge in the middle\" }));\n            return;\n        }\n        if (verbsBeginningWithErVerEntBeZerHerUber(word).length !== 0) {\n            foundParticiples.push(new GermanParticiple(word, sentencePartText, { auxiliaries: auxiliaries, type: \"er/ver/ent/be/zer/her at beginning\" }));\n            return;\n        }\n        if (verbsWithErVerEntBeZerHerUberInMiddle(word).length !== 0) {\n            foundParticiples.push(new GermanParticiple(word, sentencePartText, { auxiliaries: auxiliaries, type: \"er/ver/ent/be/zer/her in the middle\" }));\n            return;\n        }\n        if (verbsEndingWithIert(word).length !== 0) {\n            foundParticiples.push(new GermanParticiple(word, sentencePartText, { auxiliaries: auxiliaries, type: \"iert at the end\" }));\n        }\n        if (includes(irregularParticiples, word)) {\n            foundParticiples.push(new GermanParticiple(word, sentencePartText, { auxiliaries: auxiliaries, type: \"irregular\" }));\n        }\n    });\n    return foundParticiples;\n};\n//# sourceMappingURL=getParticiples.js.map"]}