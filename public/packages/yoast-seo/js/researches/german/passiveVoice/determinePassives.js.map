{"version":3,"sources":["../../../../../js/researches/german/passiveVoice/determinePassives.js"],"names":["arrayToRegex","require","auxiliaries","allAuxiliaries","getParticiples","determineSentencePartIsPassive","auxiliaryRegex","module","exports","sentencePartText","passive","auxiliaryMatches","match","participles"],"mappings":"AAAA;;AACA,IAAIA,eAAeC,QAAQ,mDAAR,CAAnB;AACA,IAAIC,cAAcD,QAAQ,kBAAR,IAA8BE,cAAhD;AACA,IAAIC,iBAAiBH,QAAQ,qBAAR,CAArB;AACA,IAAII,iCAAiCJ,QAAQ,sDAAR,CAArC;AACA,IAAIK,iBAAiBN,aAAaE,WAAb,CAArB;AACA;;;;;;;AAOAK,OAAOC,OAAP,GAAiB,UAAUC,gBAAV,EAA4BP,WAA5B,EAAyC;AACtD,QAAIQ,UAAU,KAAd;AACA,QAAIC,mBAAmBF,iBAAiBG,KAAjB,CAAuBN,cAAvB,CAAvB;AACA,QAAIK,qBAAqB,IAAzB,EAA+B;AAC3B,eAAOD,OAAP;AACH;AACD,QAAIG,cAAcT,eAAeK,gBAAf,EAAiCP,WAAjC,CAAlB;AACA,WAAOG,+BAA+BQ,WAA/B,CAAP;AACH,CARD;AASA","file":"determinePassives.js","sourcesContent":["\"use strict\";\nvar arrayToRegex = require(\"../../../stringProcessing/createRegexFromArray.js\");\nvar auxiliaries = require(\"./auxiliaries.js\")().allAuxiliaries;\nvar getParticiples = require(\"./getParticiples.js\");\nvar determineSentencePartIsPassive = require(\"../../passiveVoice/determineSentencePartIsPassive.js\");\nvar auxiliaryRegex = arrayToRegex(auxiliaries);\n/**\n * Determines whether a sentence part is passive.\n *\n * @param {string} sentencePartText The sentence part to determine voice for.\n * @param {Array} auxiliaries A list with auxiliaries in this sentence part.\n * @returns {boolean} Returns true if passive, otherwise returns false.\n */\nmodule.exports = function (sentencePartText, auxiliaries) {\n    var passive = false;\n    var auxiliaryMatches = sentencePartText.match(auxiliaryRegex);\n    if (auxiliaryMatches === null) {\n        return passive;\n    }\n    var participles = getParticiples(sentencePartText, auxiliaries);\n    return determineSentencePartIsPassive(participles);\n};\n//# sourceMappingURL=determinePassives.js.map"]}