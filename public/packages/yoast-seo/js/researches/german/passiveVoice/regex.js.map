{"version":3,"sources":["../../../../../js/researches/german/passiveVoice/regex.js"],"names":["verbsBeginningWithGeRegex","verbsBeginningWithErVerEntBeZerHerUberRegex","verbsWithGeInMiddleRegex","verbsWithErVerEntBeZerHerUberInMiddleRegex","verbsEndingWithIertRegex","exceptionsRegex","verbsBeginningWithGe","word","match","verbsBeginningWithErVerEntBeZerHerUber","verbsWithGeInMiddle","verbsWithErVerEntBeZerHerUberInMiddle","verbsEndingWithIert","exceptions","module","exports"],"mappings":"AAAA;;AACA,IAAIA,4BAA4B,sDAAhC;AACA,IAAIC,8CAA8C,gGAAlD;AACA,IAAIC,2BAA2B,oFAA/B;AACA,IAAIC,6CAA6C,8HAAjD;AACA,IAAIC,2BAA2B,kDAA/B;AACA,IAAIC,kBAAkB,8HAAtB;AACA;;;;;;AAMA,IAAIC,uBAAuB,SAAvBA,oBAAuB,CAAUC,IAAV,EAAgB;AACvC,WAAOA,KAAKC,KAAL,CAAWR,yBAAX,KAAyC,EAAhD;AACH,CAFD;AAGA;;;;;;AAMA,IAAIS,yCAAyC,SAAzCA,sCAAyC,CAAUF,IAAV,EAAgB;AACzD,WAAOA,KAAKC,KAAL,CAAWP,2CAAX,KAA2D,EAAlE;AACH,CAFD;AAGA;;;;;;AAMA,IAAIS,sBAAsB,SAAtBA,mBAAsB,CAAUH,IAAV,EAAgB;AACtC,WAAOA,KAAKC,KAAL,CAAWN,wBAAX,KAAwC,EAA/C;AACH,CAFD;AAGA;;;;;;;AAOA,IAAIS,wCAAwC,SAAxCA,qCAAwC,CAAUJ,IAAV,EAAgB;AACxD,WAAOA,KAAKC,KAAL,CAAWL,0CAAX,KAA0D,EAAjE;AACH,CAFD;AAGA;;;;;;AAMA,IAAIS,sBAAsB,SAAtBA,mBAAsB,CAAUL,IAAV,EAAgB;AACtC,WAAOA,KAAKC,KAAL,CAAWJ,wBAAX,KAAwC,EAA/C;AACH,CAFD;AAGA;;;;;;AAMA,IAAIS,aAAa,SAAbA,UAAa,CAAUN,IAAV,EAAgB;AAC7B,WAAOA,KAAKC,KAAL,CAAWH,eAAX,KAA+B,EAAtC;AACH,CAFD;AAGAS,OAAOC,OAAP,GAAiB,YAAY;AACzB,WAAO;AACHT,8BAAsBA,oBADnB;AAEHG,gDAAwCA,sCAFrC;AAGHC,6BAAqBA,mBAHlB;AAIHC,+CAAuCA,qCAJpC;AAKHC,6BAAqBA,mBALlB;AAMHC,oBAAYA;AANT,KAAP;AAQH,CATD;AAUA","file":"regex.js","sourcesContent":["\"use strict\";\nvar verbsBeginningWithGeRegex = /^((ge)\\S+t($|[ \\n\\r\\t\\.,'\\(\\)\\\"\\+\\-;!?:\\/»«‹›<>]))/ig;\nvar verbsBeginningWithErVerEntBeZerHerUberRegex = /^(((be|ent|er|her|ver|zer|über|ueber)\\S+([^s]t|sst))($|[ \\n\\r\\t\\.,'\\(\\)\\\"\\+\\-;!?:\\/»«‹›<>]))/ig;\nvar verbsWithGeInMiddleRegex = /(ab|an|auf|aus|vor|wieder|zurück)(ge)\\S+t($|[ \\n\\r\\t\\.,'\\(\\)\\\"\\+\\-;!?:\\/»«‹›<>])/ig;\nvar verbsWithErVerEntBeZerHerUberInMiddleRegex = /((ab|an|auf|aus|vor|wieder|zurück)(be|ent|er|her|ver|zer|über|ueber)\\S+([^s]t|sst))($|[ \\n\\r\\t\\.,'\\(\\)\\\"\\+\\-;!?:\\/»«‹›<>])/ig;\nvar verbsEndingWithIertRegex = /\\S+iert($|[ \\n\\r\\t\\.,'\\(\\)\\\"\\+\\-;!?:\\/»«‹›<>])/ig;\nvar exceptionsRegex = /\\S+(apparat|arbeit|dienst|haft|halt|kraft|not|pflicht|schaft|schrift|tät|wert|zeit)($|[ \\n\\r\\t\\.,'\\(\\)\\\"\\+\\-;!?:\\/»«‹›<>])/ig;\n/**\n * Checks if the word starts with 'ge'.\n *\n * @param {string} word The word to match.\n * @returns {Array} A list with matches.\n */\nvar verbsBeginningWithGe = function (word) {\n    return word.match(verbsBeginningWithGeRegex) || [];\n};\n/**\n * Checks if the word starts with 'er', 'ver', 'ent', 'be' or 'zer'.\n *\n * @param {string} word The word to match.\n * @returns {Array} A list with matches.\n */\nvar verbsBeginningWithErVerEntBeZerHerUber = function (word) {\n    return word.match(verbsBeginningWithErVerEntBeZerHerUberRegex) || [];\n};\n/**\n * Checks if the word contains 'ge' following 'ab', 'an', 'auf', 'aus', 'vor', 'wieder' or 'zurück'.\n *\n * @param {string} word The word to match.\n * @returns {Array} A list with matches.\n */\nvar verbsWithGeInMiddle = function (word) {\n    return word.match(verbsWithGeInMiddleRegex) || [];\n};\n/**\n * Checks if the word starts with 'er', 'ver', 'ent', 'be' or 'zer',\n * following  'ab', 'an', 'auf', 'aus', 'vor', 'wieder' or 'zurück'.\n *\n * @param {string} word The word to match.\n * @returns {Array} A list with matches.\n */\nvar verbsWithErVerEntBeZerHerUberInMiddle = function (word) {\n    return word.match(verbsWithErVerEntBeZerHerUberInMiddleRegex) || [];\n};\n/**\n * Checks if the word ends in 'iert'.\n *\n * @param {string} word The word to match.\n * @returns {Array} A list with matches.\n */\nvar verbsEndingWithIert = function (word) {\n    return word.match(verbsEndingWithIertRegex) || [];\n};\n/**\n * Matches the word againts the exceptions regex.\n *\n * @param {string} word The word to match.\n * @returns {Array} A list with matches.\n */\nvar exceptions = function (word) {\n    return word.match(exceptionsRegex) || [];\n};\nmodule.exports = function () {\n    return {\n        verbsBeginningWithGe: verbsBeginningWithGe,\n        verbsBeginningWithErVerEntBeZerHerUber: verbsBeginningWithErVerEntBeZerHerUber,\n        verbsWithGeInMiddle: verbsWithGeInMiddle,\n        verbsWithErVerEntBeZerHerUberInMiddle: verbsWithErVerEntBeZerHerUberInMiddle,\n        verbsEndingWithIert: verbsEndingWithIert,\n        exceptions: exceptions,\n    };\n};\n//# sourceMappingURL=regex.js.map"]}