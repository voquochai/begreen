{"version":3,"sources":["../../../js/stringProcessing/getAlttagContent.js"],"names":["stripSpaces","require","regexAltTag","module","exports","text","alt","matches","match","replace"],"mappings":"AAAA;AACA;;AACA,IAAIA,cAAcC,QAAQ,oCAAR,CAAlB;AACA,IAAIC,cAAc,oBAAlB;AACA;;;;;;AAMAC,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7B,QAAIC,MAAM,EAAV;AACA,QAAIC,UAAUF,KAAKG,KAAL,CAAWN,WAAX,CAAd;AACA,QAAIK,YAAY,IAAhB,EAAsB;AAClBD,cAAMN,YAAYO,QAAQ,CAAR,CAAZ,CAAN;AACAD,cAAMA,IAAIG,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,CAAN;AACAH,cAAMA,IAAIG,OAAJ,CAAY,SAAZ,EAAuB,GAAvB,CAAN;AACH;AACD,WAAOH,GAAP;AACH,CATD;AAUA","file":"getAlttagContent.js","sourcesContent":["\"use strict\";\n/** @module stringProcessing/getAlttagContent */\nvar stripSpaces = require(\"../stringProcessing/stripSpaces.js\");\nvar regexAltTag = /alt=(['\"])(.*?)\\1/i;\n/**\n * Checks for an alttag in the image and returns its content\n *\n * @param {String} text Textstring to match alt\n * @returns {String} the contents of the alttag, empty if none is set.\n */\nmodule.exports = function (text) {\n    var alt = \"\";\n    var matches = text.match(regexAltTag);\n    if (matches !== null) {\n        alt = stripSpaces(matches[2]);\n        alt = alt.replace(/&quot;/g, \"\\\"\");\n        alt = alt.replace(/&#039;/g, \"'\");\n    }\n    return alt;\n};\n//# sourceMappingURL=getAlttagContent.js.map"]}