{"version":3,"sources":["../../../js/stringProcessing/stripHTMLTags.js"],"names":["stripSpaces","require","blockElements","blockElementStartRegex","RegExp","join","blockElementEndRegex","stripIncompleteTags","text","replace","stripBlockTagsAtStartEnd","stripFullTags","module","exports"],"mappings":"AAAA;AACA;;AACA,IAAIA,cAAcC,QAAQ,oCAAR,CAAlB;AACA,IAAIC,gBAAgBD,QAAQ,oBAAR,EAA8BC,aAAlD;AACA,IAAIC,yBAAyB,IAAIC,MAAJ,CAAW,QAAQF,cAAcG,IAAd,CAAmB,GAAnB,CAAR,GAAkC,UAA7C,EAAyD,GAAzD,CAA7B;AACA,IAAIC,uBAAuB,IAAIF,MAAJ,CAAW,QAAQF,cAAcG,IAAd,CAAmB,GAAnB,CAAR,GAAkC,WAA7C,EAA0D,GAA1D,CAA3B;AACA;;;;;;AAMA,IAAIE,sBAAsB,SAAtBA,mBAAsB,CAAUC,IAAV,EAAgB;AACtCA,WAAOA,KAAKC,OAAL,CAAa,kBAAb,EAAiC,EAAjC,CAAP;AACAD,WAAOA,KAAKC,OAAL,CAAa,kBAAb,EAAiC,EAAjC,CAAP;AACA,WAAOD,IAAP;AACH,CAJD;AAKA;;;;;;AAMA,IAAIE,2BAA2B,SAA3BA,wBAA2B,CAAUF,IAAV,EAAgB;AAC3CA,WAAOA,KAAKC,OAAL,CAAaN,sBAAb,EAAqC,EAArC,CAAP;AACAK,WAAOA,KAAKC,OAAL,CAAaH,oBAAb,EAAmC,EAAnC,CAAP;AACA,WAAOE,IAAP;AACH,CAJD;AAKA;;;;;;AAMA,IAAIG,gBAAgB,SAAhBA,aAAgB,CAAUH,IAAV,EAAgB;AAChCA,WAAOA,KAAKC,OAAL,CAAa,eAAb,EAA8B,GAA9B,CAAP;AACAD,WAAOR,YAAYQ,IAAZ,CAAP;AACA,WAAOA,IAAP;AACH,CAJD;AAKAI,OAAOC,OAAP,GAAiB;AACbF,mBAAeA,aADF;AAEbJ,yBAAqBA,mBAFR;AAGbG,8BAA0BA;AAHb,CAAjB;AAKA","file":"stripHTMLTags.js","sourcesContent":["\"use strict\";\n/** @module stringProcessing/stripHTMLTags */\nvar stripSpaces = require(\"../stringProcessing/stripSpaces.js\");\nvar blockElements = require(\"../helpers/html.js\").blockElements;\nvar blockElementStartRegex = new RegExp(\"^<(\" + blockElements.join(\"|\") + \")[^>]*?>\", \"i\");\nvar blockElementEndRegex = new RegExp(\"</(\" + blockElements.join(\"|\") + \")[^>]*?>$\", \"i\");\n/**\n * Strip incomplete tags within a text. Strips an endtag at the beginning of a string and the start tag at the end of a\n * start of a string.\n * @param {String} text The text to strip the HTML-tags from at the begin and end.\n * @returns {String} The text without HTML-tags at the begin and end.\n */\nvar stripIncompleteTags = function (text) {\n    text = text.replace(/^(<\\/([^>]+)>)+/i, \"\");\n    text = text.replace(/(<([^\\/>]+)>)+$/i, \"\");\n    return text;\n};\n/**\n * Removes the block element tags at the beginning and end of a string and returns this string.\n *\n * @param {string} text The unformatted string.\n * @returns {string} The text with removed HTML begin and end block elements\n */\nvar stripBlockTagsAtStartEnd = function (text) {\n    text = text.replace(blockElementStartRegex, \"\");\n    text = text.replace(blockElementEndRegex, \"\");\n    return text;\n};\n/**\n * Strip HTML-tags from text\n *\n * @param {String} text The text to strip the HTML-tags from.\n * @returns {String} The text without HTML-tags.\n */\nvar stripFullTags = function (text) {\n    text = text.replace(/(<([^>]+)>)/ig, \" \");\n    text = stripSpaces(text);\n    return text;\n};\nmodule.exports = {\n    stripFullTags: stripFullTags,\n    stripIncompleteTags: stripIncompleteTags,\n    stripBlockTagsAtStartEnd: stripBlockTagsAtStartEnd,\n};\n//# sourceMappingURL=stripHTMLTags.js.map"]}