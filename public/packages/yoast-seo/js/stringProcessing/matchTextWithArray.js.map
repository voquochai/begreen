{"version":3,"sources":["../../../js/stringProcessing/matchTextWithArray.js"],"names":["arrayToRegex","require","removeSpaces","module","exports","text","array","matches","match","map","string"],"mappings":"AAAA;AACA;;AACA,IAAIA,eAAeC,QAAQ,6CAAR,CAAnB;AACA,IAAIC,eAAeD,QAAQ,gDAAR,CAAnB;AACA;;;;;;;AAOAE,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACpC,QAAIC,UAAUF,KAAKG,KAAL,CAAWR,aAAaM,KAAb,CAAX,CAAd;AACA,QAAIC,YAAY,IAAhB,EAAsB;AAClBA,kBAAU,EAAV;AACH;AACDA,cAAUA,QAAQE,GAAR,CAAY,UAAUC,MAAV,EAAkB;AACpC,eAAOR,aAAaQ,MAAb,CAAP;AACH,KAFS,CAAV;AAGA,WAAOH,OAAP;AACH,CATD;AAUA","file":"matchTextWithArray.js","sourcesContent":["\"use strict\";\n/** @module stringProcessing/matchTextWithArray */\nvar arrayToRegex = require(\"../stringProcessing/createRegexFromArray.js\");\nvar removeSpaces = require(\"../stringProcessing/removeNonWordCharacters.js\");\n/**\n * Matches strings from an array against a given text.\n *\n * @param {String} text The text to match\n * @param {Array} array The array with strings to match\n * @returns {Array} array An array with all matches of the text.\n */\nmodule.exports = function (text, array) {\n    var matches = text.match(arrayToRegex(array));\n    if (matches === null) {\n        matches = [];\n    }\n    matches = matches.map(function (string) {\n        return removeSpaces(string);\n    });\n    return matches;\n};\n//# sourceMappingURL=matchTextWithArray.js.map"]}