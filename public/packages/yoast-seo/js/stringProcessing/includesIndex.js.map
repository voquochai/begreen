{"version":3,"sources":["../../../js/stringProcessing/includesIndex.js"],"names":["isEmpty","require","forEach","includes","module","exports","precedingWords","matchIndex","addSpace","space","precedingWordsEndIndices","precedingWord","precedingWordsEndIndex","index","match","length","push"],"mappings":"AAAA;;AACA,IAAIA,UAAUC,QAAQ,gBAAR,CAAd;AACA,IAAIC,UAAUD,QAAQ,gBAAR,CAAd;AACA,IAAIE,WAAWF,QAAQ,iBAAR,CAAf;AACA;;;;;;;;;AASAG,OAAOC,OAAP,GAAiB,UAAUC,cAAV,EAA0BC,UAA1B,EAAuD;AAAA,QAAjBC,QAAiB,uEAAN,IAAM;;AACpE;;;;;AAKA,QAAIC,QAAQD,WAAW,CAAX,GAAe,CAA3B;AACA,QAAIR,QAAQM,cAAR,CAAJ,EAA6B;AACzB,eAAO,KAAP;AACH;AACD,QAAII,2BAA2B,EAA/B;AACAR,YAAQI,cAAR,EAAwB,UAAUK,aAAV,EAAyB;AAC7C,YAAIC,yBAAyBD,cAAcE,KAAd,GAAsBF,cAAcG,KAAd,CAAoBC,MAA1C,GAAmDN,KAAhF;AACAC,iCAAyBM,IAAzB,CAA8BJ,sBAA9B;AACH,KAHD;AAIA,WAAOT,SAASO,wBAAT,EAAmCH,UAAnC,CAAP;AACH,CAhBD;AAiBA","file":"includesIndex.js","sourcesContent":["\"use strict\";\nvar isEmpty = require(\"lodash/isEmpty\");\nvar forEach = require(\"lodash/forEach\");\nvar includes = require(\"lodash/includes\");\n/**\n * Checks whether a given word is directly preceded by a word from a list of words.\n *\n * @param {Array} precedingWords The array of objects with matches and indices.\n * @param {number} matchIndex The index of the word for which to check whether it's preceded by one of the other words.\n * @param {boolean} addSpace True if a space should be added.\n *\n * @returns {boolean} Returns true if the match is preceded by a given word, otherwise returns false.\n */\nmodule.exports = function (precedingWords, matchIndex, addSpace = true) {\n    /*\n    1 if there is a space between the match and the preceding word\n    (because the end word boundary is not included in the match).\n    0 if the preceding word is a contraction.\n    */\n    var space = addSpace ? 1 : 0;\n    if (isEmpty(precedingWords)) {\n        return false;\n    }\n    var precedingWordsEndIndices = [];\n    forEach(precedingWords, function (precedingWord) {\n        var precedingWordsEndIndex = precedingWord.index + precedingWord.match.length + space;\n        precedingWordsEndIndices.push(precedingWordsEndIndex);\n    });\n    return includes(precedingWordsEndIndices, matchIndex);\n};\n//# sourceMappingURL=includesIndex.js.map"]}