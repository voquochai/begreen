{"version":3,"sources":["../../../js/stringProcessing/createRegexFromArray.js"],"names":["addWordBoundary","require","map","module","exports","array","disableWordBoundary","regexString","_disableWordBoundary","boundedArray","string","join","RegExp"],"mappings":"AAAA;AACA;;AACA,IAAIA,kBAAkBC,QAAQ,wCAAR,CAAtB;AACA,IAAIC,MAAMD,QAAQ,YAAR,CAAV;AACA;;;;;;;AAOAE,OAAOC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,mBAAjB,EAAsC;AACnD,QAAIC,WAAJ;AACA,QAAIC,uBAAuBF,uBAAuB,KAAlD;AACA,QAAIG,eAAeP,IAAIG,KAAJ,EAAW,UAAUK,MAAV,EAAkB;AAC5C,YAAIF,oBAAJ,EAA0B;AACtB,mBAAOE,MAAP;AACH;AACD,eAAOV,gBAAgBU,MAAhB,EAAwB,IAAxB,CAAP;AACH,KALkB,CAAnB;AAMAH,kBAAc,MAAME,aAAaE,IAAb,CAAkB,KAAlB,CAAN,GAAiC,GAA/C;AACA,WAAO,IAAIC,MAAJ,CAAWL,WAAX,EAAwB,IAAxB,CAAP;AACH,CAXD;AAYA","file":"createRegexFromArray.js","sourcesContent":["\"use strict\";\n/** @module stringProcessing/createRegexFromArray */\nvar addWordBoundary = require(\"../stringProcessing/addWordboundary.js\");\nvar map = require(\"lodash/map\");\n/**\n * Creates a regex of combined strings from the input array.\n *\n * @param {array} array The array with strings\n * @param {boolean} [disableWordBoundary] Boolean indicating whether or not to disable word boundaries\n * @returns {RegExp} regex The regex created from the array.\n */\nmodule.exports = function (array, disableWordBoundary) {\n    var regexString;\n    var _disableWordBoundary = disableWordBoundary || false;\n    var boundedArray = map(array, function (string) {\n        if (_disableWordBoundary) {\n            return string;\n        }\n        return addWordBoundary(string, true);\n    });\n    regexString = \"(\" + boundedArray.join(\")|(\") + \")\";\n    return new RegExp(regexString, \"ig\");\n};\n//# sourceMappingURL=createRegexFromArray.js.map"]}