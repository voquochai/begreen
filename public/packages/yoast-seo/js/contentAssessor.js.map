{"version":3,"sources":["../../js/contentAssessor.js"],"names":["Assessor","require","fleschReadingEase","paragraphTooLong","SentenceLengthInText","SubheadingDistributionTooLong","transitionWords","passiveVoice","sentenceBeginnings","textPresence","contentConfiguration","scoreToRating","map","sum","ContentAssessor","i18n","options","call","locale","hasOwnProperty","_assessments","sentenceLength","inherits","prototype","calculatePenaltyPointsFullSupport","rating","calculatePenaltyPointsPartialSupport","_allAssessmentsSupported","numberOfAssessments","applicableAssessments","getApplicableAssessments","length","calculatePenaltyPoints","results","getValidResults","penaltyPoints","result","getScore","bind","_ratePenaltyPoints","totalPenaltyPoints","calculateOverallScore","module","exports"],"mappings":"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","file":"contentAssessor.js","sourcesContent":["\"use strict\";\nlet Assessor = require(\"./assessor.js\");\nlet fleschReadingEase = require(\"./assessments/readability/fleschReadingEaseAssessment.js\");\nlet paragraphTooLong = require(\"./assessments/readability/paragraphTooLongAssessment.js\");\nlet SentenceLengthInText = require(\"./assessments/readability/sentenceLengthInTextAssessment.js\");\nlet SubheadingDistributionTooLong = require(\"./assessments/readability/subheadingDistributionTooLongAssessment.js\");\nlet transitionWords = require(\"./assessments/readability/transitionWordsAssessment.js\");\nlet passiveVoice = require(\"./assessments/readability/passiveVoiceAssessment.js\");\nlet sentenceBeginnings = require(\"./assessments/readability/sentenceBeginningsAssessment.js\");\nlet textPresence = require(\"./assessments/readability/textPresenceAssessment.js\");\nlet contentConfiguration = require(\"./config/content/combinedConfig.js\");\n/*\n    Temporarily disabled:\n\n    var wordComplexity = require( \"./assessments/wordComplexityAssessment.js\" );\n    var sentenceLengthInDescription = require( \"./assessments/sentenceLengthInDescriptionAssessment.js\" );\n */\nlet scoreToRating = require(\"./interpreters/scoreToRating\");\nlet map = require(\"lodash/map\");\nlet sum = require(\"lodash/sum\");\n/**\n * Creates the Assessor\n *\n * @param {object} i18n The i18n object used for translations.\n * @param {Object} options The options for this assessor.\n * @param {Object} options.marker The marker to pass the list of marks to.\n * @param {string} options.locale The locale.\n *\n * @constructor\n */\nlet ContentAssessor = function (i18n, options = {}) {\n    Assessor.call(this, i18n, options);\n    let locale = (options.hasOwnProperty(\"locale\")) ? options.locale : \"en_US\";\n    this._assessments = [\n        fleschReadingEase,\n        new SubheadingDistributionTooLong(),\n        paragraphTooLong,\n        new SentenceLengthInText(contentConfiguration(locale).sentenceLength),\n        transitionWords,\n        passiveVoice,\n        textPresence,\n        sentenceBeginnings,\n    ];\n};\nrequire(\"util\").inherits(ContentAssessor, Assessor);\n/**\n * Calculates the weighted rating for languages that have all assessments based on a given rating.\n *\n * @param {number} rating The rating to be weighted.\n * @returns {number} The weighted rating.\n */\nContentAssessor.prototype.calculatePenaltyPointsFullSupport = function (rating) {\n    switch (rating) {\n        case \"bad\":\n            return 3;\n        case \"ok\":\n            return 2;\n        default:\n        case \"good\":\n            return 0;\n    }\n};\n/**\n * Calculates the weighted rating for languages that don't have all assessments based on a given rating.\n *\n * @param {number} rating The rating to be weighted.\n * @returns {number} The weighted rating.\n */\nContentAssessor.prototype.calculatePenaltyPointsPartialSupport = function (rating) {\n    switch (rating) {\n        case \"bad\":\n            return 4;\n        case \"ok\":\n            return 2;\n        default:\n        case \"good\":\n            return 0;\n    }\n};\n/**\n * Determines whether a language is fully supported. If a language supports 8 content assessments\n * it is fully supported\n *\n * @returns {boolean} True if fully supported.\n */\nContentAssessor.prototype._allAssessmentsSupported = function () {\n    let numberOfAssessments = 8;\n    let applicableAssessments = this.getApplicableAssessments();\n    return applicableAssessments.length === numberOfAssessments;\n};\n/**\n * Calculates the penalty points based on the assessment results.\n *\n * @returns {number} The total penalty points for the results.\n */\nContentAssessor.prototype.calculatePenaltyPoints = function () {\n    let results = this.getValidResults();\n    let penaltyPoints = map(results, function (result) {\n        let rating = scoreToRating(result.getScore());\n        if (this._allAssessmentsSupported()) {\n            return this.calculatePenaltyPointsFullSupport(rating);\n        }\n        return this.calculatePenaltyPointsPartialSupport(rating);\n    }.bind(this));\n    return sum(penaltyPoints);\n};\n/**\n * Rates the penalty points\n *\n * @param {number} totalPenaltyPoints The amount of penalty points.\n * @returns {number} The score based on the amount of penalty points.\n *\n * @private\n */\nContentAssessor.prototype._ratePenaltyPoints = function (totalPenaltyPoints) {\n    if (this.getValidResults().length === 1) {\n        // If we have only 1 result, we only have a \"no content\" result\n        return 30;\n    }\n    if (this._allAssessmentsSupported()) {\n        // Determine the total score based on the total penalty points.\n        if (totalPenaltyPoints > 6) {\n            // A red indicator.\n            return 30;\n        }\n        if (totalPenaltyPoints > 4) {\n            // An orange indicator.\n            return 60;\n        }\n    }\n    else {\n        if (totalPenaltyPoints > 4) {\n            // A red indicator.\n            return 30;\n        }\n        if (totalPenaltyPoints > 2) {\n            // An orange indicator.\n            return 60;\n        }\n    }\n    // A green indicator.\n    return 90;\n};\n/**\n * Calculates the overall score based on the assessment results.\n *\n * @returns {number} The overall score.\n */\nContentAssessor.prototype.calculateOverallScore = function () {\n    let results = this.getValidResults();\n    // If you have no content, you have a red indicator.\n    if (results.length === 0) {\n        return 30;\n    }\n    let totalPenaltyPoints = this.calculatePenaltyPoints();\n    return this._ratePenaltyPoints(totalPenaltyPoints);\n};\nmodule.exports = ContentAssessor;\n//# sourceMappingURL=contentAssessor.js.map"]}